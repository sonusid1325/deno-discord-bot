export { };

//# sourceMappingURL=data:application/json;base64,{"version":3,"sources":["../../../src/typings/routes.ts"],"sourcesContent":["import type {\n  BigString,\n  GetBans,\n  GetEntitlements,\n  GetGuildAuditLog,\n  GetGuildPruneCountQuery,\n  GetInvite,\n  GetMessagesOptions,\n  GetPollAnswerVotes,\n  GetReactions,\n  GetScheduledEventUsers,\n  GetUserGuilds,\n  InteractionCallbackOptions,\n  ListArchivedThreads,\n  ListGuildMembers,\n  ListSkuSubscriptionsOptions,\n} from '@discordeno/types'\n\nexport interface RestRoutes {\n  /** A specific user route. */\n  user: (id: BigString) => string\n  // Gateway Bot\n  gatewayBot: () => string\n  // Standard Sticker Packs\n  stickerPacks: () => string\n  stickerPack: (stickerPackId: BigString) => string\n  /** Routes for webhook related routes. */\n  webhooks: {\n    /** Route for managing the original message sent by a webhook. */\n    original: (webhookId: BigString, token: string, options?: { threadId?: BigString }) => string\n    /** Route for webhook with a id. */\n    id: (webhookId: BigString) => string\n    /** Route for handling a webhook with a token. */\n    webhook: (webhookId: BigString, token: string, options?: { wait?: boolean; threadId?: BigString }) => string\n    /** Route for handling a message that was sent through a webhook. */\n    message: (webhookId: BigString, token: string, messageId: BigString, options?: { threadId?: BigString }) => string\n  }\n  /** Routes for channel related endpoints. */\n  channels: {\n    /** Route for handling bulk messages in a channel. */\n    bulk: (channelId: BigString) => string\n    /** Route for non-specific dm channel. */\n    dm: () => string\n    /** Route to add a user to an exiting group DM, requires an access token with the OAuth2 `gdm.join` scope */\n    dmRecipient: (channelId: BigString, userId: BigString) => string\n    /** Route for handling a specific pin. */\n    pin: (channelId: BigString, messageId: BigString) => string\n    /** Route for handling a channels pins. */\n    pins: (channelId: BigString) => string\n    /** Route for non-specific webhook in a channel. */\n    webhooks: (channelId: BigString) => string\n    /** Route for a specific channel. */\n    channel: (channelId: BigString) => string\n    /** Route for following a specific channel. */\n    follow: (channelId: BigString) => string\n    /** Route for managing a forum with a message. */\n    forum: (channelId: BigString) => string\n    /** Route for a specific channel's invites. */\n    invites: (channelId: BigString) => string\n    /** Route for a specific message */\n    message: (channelId: BigString, id: BigString) => string\n    /** Route for handling non-specific messages. */\n    messages: (channelId: BigString, options?: GetMessagesOptions) => string\n    /** Route for handling a specific overwrite. */\n    overwrite: (channelId: BigString, overwriteId: BigString) => string\n    /** Route for handling crossposting a specific message. */\n    crosspost: (channelId: BigString, messageId: BigString) => string\n    /** Route for handling non-specific stages */\n    stages: () => string\n    /** Route for handling a specific stage */\n    stage: (channelId: BigString) => string\n    /** Routes for handling thread related to a channel. */\n    threads: {\n      /** Route for thread a specific message. */\n      message: (channelId: BigString, messageId: BigString) => string\n      /** Route for thread without a message. */\n      all: (channelId: BigString) => string\n      /** Route for active threads. */\n      active: (guildId: BigString) => string\n      /** Route for members in a thread. */\n      members: (channelId: BigString) => string\n      /** Route for the bot member in a thread. */\n      me: (channelId: BigString) => string\n      /** Route for a specific member in a thread. */\n      user: (channelId: BigString, userId: BigString) => string\n      /** Route for handling archived threads. */\n      archived: (channelId: BigString) => string\n      /** Route for handling publically archived threads. */\n      public: (channelId: BigString, options?: ListArchivedThreads) => string\n      /** Route for handling private archived threads. */\n      private: (channelId: BigString, options?: ListArchivedThreads) => string\n      /** Route for handling private archived threads that the bot has joined. */\n      joined: (channelId: BigString, options?: ListArchivedThreads) => string\n    }\n    /** Route for handling typing indicators in a c«hannel. */\n    typing: (channelId: BigString) => string\n    /** Routes for handling reactions on a message. */\n    reactions: {\n      /** Route for handling a bots reaction. */\n      bot: (channelId: BigString, messageId: BigString, emoji: string) => string\n      /** Route for handling a user's reactions. */\n      user: (channelId: BigString, messageId: BigString, emoji: string, userId: BigString) => string\n      /** Route for handling all the reactions on a message. */\n      all: (channelId: BigString, messageId: BigString) => string\n      /** Route for handling all reactions for a single emoji on a message. */\n      emoji: (channelId: BigString, messageId: BigString, emoji: string, options?: GetReactions) => string\n      /** Route for handling a specific reaction on a message. */\n      message: (channelId: BigString, messageId: BigString, emoji: string, options?: GetReactions) => string\n    }\n    polls: {\n      votes: (channelId: BigString, messageId: BigString, answerId: number, options?: GetPollAnswerVotes) => string\n      expire: (channelId: BigString, messageId: BigString) => string\n    }\n  }\n  /** Routes for guild related endpoints. */\n  guilds: {\n    /** Routes for handling a non-specific guild. */\n    all: () => string\n    /** Route for fetching an user guilds. Requires `guilds` OAuth2 scope */\n    userGuilds: (options?: GetUserGuilds) => string\n    /** Route for handling audit logs in a guild. */\n    auditlogs: (guildId: BigString, options?: GetGuildAuditLog) => string\n    /** Routes for a guilds automoderation. */\n    automod: {\n      /** Route for handling a guild's automoderation. */\n      rules: (guildId: BigString) => string\n      /** Route for handling a specific automoderation rule guild's */\n      rule: (guildId: BigString, ruleId: BigString) => string\n    }\n    /** Routes for handling a guild's scheduled events. */\n    events: {\n      /** Route for handling non-specific scheduled event. */\n      events: (guildId: BigString, withUserCount?: boolean) => string\n      /** Route for handling a specific scheduled event. */\n      event: (guildId: BigString, eventId: BigString, withUserCount?: boolean) => string\n      /** Route for handling a scheduled event users. */\n      users: (guildId: BigString, eventId: BigString, options?: GetScheduledEventUsers) => string\n    }\n    /** Route for handling non-specific channels in a guild */\n    channels: (guildId: BigString) => string\n    /** Route for handling a specific emoji. */\n    emoji: (guildId: BigString, id: BigString) => string\n    /** Route for handling non-specific emojis. */\n    emojis: (guildId: BigString) => string\n    /** Route for handling a specific guild. */\n    guild: (guildId: BigString, withCounts?: boolean) => string\n    /** Route for handling a specific integration. */\n    integration: (guildId: BigString, integrationId: BigString) => string\n    /** Route for handling non-specific integrations. */\n    integrations: (guildId: BigString) => string\n    /** Route for handling a specific guild invite. */\n    invite: (inviteCode: string, options?: GetInvite) => string\n    /** Route for handling non-specific invites in a guild. */\n    invites: (guildId: BigString) => string\n    /** Route for handling a bot leaving a guild. */\n    leave: (guildId: BigString) => string\n    /** Route for handling a guild's preview. */\n    preview: (guildId: BigString) => string\n    /** Route for handling pruning of a guild. */\n    prune: (guildId: BigString, options?: GetGuildPruneCountQuery) => string\n    /** Route for handling non-specific webhooks in a guild */\n    webhooks: (guildId: BigString) => string\n    /** Route for handling a guild's welcome screen. */\n    welcome: (guildId: BigString) => string\n    /** Route for handling a guild's widget. */\n    widget: (guildId: BigString) => string\n    /** Route for handling a guild's widget in the form of json. */\n    widgetJson: (guildId: BigString) => string\n    /** Route for handling a guilds mfa level. */\n    mfa: (guildId: BigString) => string\n    /** Routes for handling a guild's members. */\n    members: {\n      /** Route for handling a specific guild member's ban. */\n      ban: (guildId: BigString, userId: BigString) => string\n      /** Route for handling non-specific bans in a guild. */\n      bans: (guildId: BigString, options?: GetBans) => string\n      /** Route for bulk-banning members. */\n      bulkBan: (guildId: BigString) => string\n      /** Route for handling a the bot guild member. */\n      bot: (guildId: BigString) => string\n      /** Route for handling a specific guild member. */\n      member: (guildId: BigString, userId: BigString) => string\n      /** Route to get the authenticated user. Requires the `guilds.members.read` OAuth2 scope */\n      currentMember: (guildId: BigString) => string\n      /** Route for handling non-specific guild members. */\n      members: (guildId: BigString, options?: ListGuildMembers) => string\n      /** Route for handling member searching in a guild. */\n      search: (guildId: BigString, query: string, options?: { limit?: number }) => string\n      /** Route for handling pruning guild members. */\n      prune: (guildId: BigString, options?: GetGuildPruneCountQuery) => string\n    }\n    /** Routes for handling a guild's templates. */\n    templates: {\n      /** Route for handling a specifc guild's templates with a code only. */\n      code: (code: string) => string\n      /** Route for handling a specific guild's template with a guild id and code. */\n      guild: (guildId: BigString, code: string) => string\n      /** Route for handling non-specific guild's templates. */\n      all: (guildId: BigString) => string\n    }\n    /** Route for handling a guild's vanity url. */\n    vanity: (guildId: BigString) => string\n    /** Route for handling a guild's regions. */\n    regions: (guildId: BigString) => string\n    /** Routes for handling a guild's roles. */\n    roles: {\n      /** Route for handling a specific guild role. */\n      one: (guildId: BigString, roleId: BigString) => string\n      /** Route for handling a guild's roles. */\n      all: (guildId: BigString) => string\n      /** Route for handling a members roles in a guild. */\n      member: (guildId: BigString, memberId: BigString, roleId: BigString) => string\n    }\n    /** Route for handling a specific guild sticker. */\n    stickers: (guildId: BigString) => string\n    /** Route for handling non-specific guild stickers. */\n    sticker: (guildId: BigString, stickerId: BigString) => string\n    /** Route for handling a voice state. */\n    voice: (guildId: BigString, userId?: BigString) => string\n    /** Route for the onboarding */\n    onboarding: (guildId: BigString) => string\n  }\n  /** Routes for interaction related endpoints. */\n  interactions: {\n    /** Routes for interaction command related endpoints. */\n    commands: {\n      /** Route for non-specific commands. */\n      commands: (applicationId: BigString) => string\n      /** Route for guild related commands. */\n      guilds: {\n        /** Route for non-specific guild commands. */\n        all: (applicationId: BigString, guildId: BigString) => string\n        /** Route for a specific guild command. */\n        one: (applicationId: BigString, guildId: BigString, commandId: BigString, withLocalizations?: boolean) => string\n      }\n      /** Route for non-specific command permissions. */\n      permissions: (applicationId: BigString, guildId: BigString) => string\n      /** Route for a specific command's permission. */\n      permission: (applicationId: BigString, guildId: BigString, commandId: BigString) => string\n      /** Route for a specific command. */\n      command: (applicationId: BigString, commandId: BigString, withLocalizations?: boolean) => string\n    }\n    /** Routes for interaction response related endpoints. */\n    responses: {\n      /** Route for handling a callback response with id and token. */\n      callback: (interactionId: BigString, token: string, options?: InteractionCallbackOptions) => string\n      /** Route for handling the original response using id and token. */\n      original: (interactionId: BigString, token: string) => string\n      /** Route for handling a followup message from a interaction response. */\n      message: (applicationId: BigString, token: string, messageId: BigString) => string\n    }\n  }\n  /** Routes related to OAuth2 */\n  oauth2: {\n    /** Route to generate a new access token */\n    tokenExchange: () => string\n    /** Route to revoke an OAuth2 access_token */\n    tokenRevoke: () => string\n    /** Route to get information about the current authorization. Requires an access token */\n    currentAuthorization: () => string\n    /** Route to get information about the current application. */\n    application: () => string\n    /** Route to get the connection the user has. Requires the `connections` OAuth2 scope */\n    connections: () => string\n    /** Route to handling role-connection for an application */\n    roleConnections: (applicationId: BigString) => string\n  }\n  /** Routes related to monetization (entitlements and SKU) */\n  monetization: {\n    /** Route to list / create entitlements */\n    entitlements: (applicationId: BigString, options?: GetEntitlements) => string\n    /** Route to delete an entitlement */\n    entitlement: (applicationId: BigString, entitlementId: BigString) => string\n    /** Route to consume an entitlement */\n    consumeEntitlement: (applicationId: BigString, entitlementId: BigString) => string\n    /** Route to list the SKUs */\n    skus: (applicationId: BigString) => string\n    /** Route to list the SKU subscriptions */\n    subscriptions: (skuId: BigString, options?: ListSkuSubscriptionsOptions) => string\n    /** Route to get a SKU subscription */\n    subscription: (skuId: BigString, subscriptionId: BigString) => string\n  }\n  /** Routes related to soundboard sounds */\n  soundboard: {\n    /** Send a soundboard sound to a voice channel the user is connected to. */\n    sendSound: (channelId: BigString) => string\n    /** List the discord default soundboard sounds */\n    listDefault: () => string\n    /** Route for list/create a guild sounds */\n    guildSounds: (guildId: BigString) => string\n    /** Route for get/edit/delete of a guild sound */\n    guildSound: (guildId: BigString, soundId: BigString) => string\n  }\n  /** Route to list / create an application emoji */\n  applicationEmojis: (applicationId: BigString) => string\n  /** Route to get / edit / delete an application emoji */\n  applicationEmoji: (applicationId: BigString, emojiId: BigString) => string\n  /** Get information about the current OAuth2 user / bot user. If used with a OAuth2 token requires the `identify` OAuth2 scope */\n  currentUser: () => string\n  /** Route to get and edit information about the current application. */\n  application: () => string\n  /** Route for get an activity instance */\n  applicationActivityInstance: (applicationId: BigString, instanceId: string) => string\n  /** Route for handling a sticker. */\n  sticker: (stickerId: BigString) => string\n  /** Route for handling all voice regions. */\n  regions: () => string\n}\n"],"names":[],"mappings":"AAkBA,WAiSC"}