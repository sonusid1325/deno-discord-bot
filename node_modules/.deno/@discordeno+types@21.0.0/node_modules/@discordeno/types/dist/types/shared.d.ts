export type BigString = bigint | string;
export declare enum PresenceStatus {
    online = 0,
    dnd = 1,
    idle = 2,
    offline = 3
}
/** https://discord.com/developers/docs/resources/user#user-object-premium-types */
export declare enum PremiumTypes {
    None = 0,
    NitroClassic = 1,
    Nitro = 2,
    NitroBasic = 3
}
/** https://discord.com/developers/docs/resources/user#user-object-user-flags */
export declare enum UserFlags {
    DiscordEmployee = 1,
    PartneredServerOwner = 2,
    HypeSquadEventsMember = 4,
    BugHunterLevel1 = 8,
    HouseBravery = 64,
    HouseBrilliance = 128,
    HouseBalance = 256,
    EarlySupporter = 512,
    TeamUser = 1024,
    BugHunterLevel2 = 16384,
    VerifiedBot = 65536,
    EarlyVerifiedBotDeveloper = 131072,
    DiscordCertifiedModerator = 262144,
    BotHttpInteractions = 524288,
    ActiveDeveloper = 4194304
}
export declare enum MemberFlags {
    /**
     * Member has left and rejoined the guild
     *
     * @remarks
     * This value is not editable
     */
    DidRejoin = 1,
    /**
     * Member has completed onboarding
     *
     * @remarks
     * This value is not editable
     */
    CompletedOnboarding = 2,
    /** Member is exempt from guild verification requirements */
    BypassesVerification = 4,
    /**
     * Member has started onboarding
     *
     * @remarks
     * This value is not editable
     */
    StartedOnboarding = 8,
    /**
     * Member is a guest and can only access the voice channel they were invited to
     *
     * @remarks
     * This value is not editable
     */
    IsGuest = 16,
    /**
     * Member has started Server Guide new member actions
     *
     * @remarks
     * This value is not editable
     */
    StartedHomeActions = 32,
    /**
     * Member has completed Server Guide new member actions
     *
     * @remarks
     * This value is not editable
     */
    CompletedHomeActions = 64,
    /**
     * Member's username, display name, or nickname is blocked by AutoMod
     *
     * @remarks
     * This value is not editable
     */
    AutomodQuarantinedUsername = 128,
    /**
     * Member has dismissed the DM settings upsell
     *
     * @remarks
     * This value is not editable
     */
    DmSettingsUpsellAcknowledged = 512
}
/** https://discord.com/developers/docs/resources/channel#channels-resource */
export declare enum ChannelFlags {
    None = 0,
    /** this thread is pinned to the top of its parent `GUILD_FORUM` channel */
    Pinned = 2,
    /** Whether a tag is required to be specified when creating a thread in a `GUILD_FORUM` or a GUILD_MEDIA channel. Tags are specified in the `applied_tags` field. */
    RequireTag = 16,
    /** When set hides the embedded media download options. Available only for media channels. */
    HideMediaDownloadOptions = 32768
}
/** https://discord.com/developers/docs/topics/permissions#role-object-role-flags */
export declare enum RoleFlags {
    None = 0,
    /** Role can be selected by members in an onboarding prompt */
    InPrompt = 1
}
export declare enum AttachmentFlags {
    None = 0,
    /** This attachment has been edited using the remix feature on mobile */
    IsRemix = 4
}
/** https://discord.com/developers/docs/monetization/skus#sku-object-sku-flags */
export declare enum SkuFlags {
    /** SKU is available for purchase */
    Available = 4,
    /** Recurring SKU that can be purchased by a user and applied to a single server. Grants access to every user in that server. */
    GuildSubscription = 128,
    /** Recurring SKU purchased by a user for themselves. Grants access to the purchasing user in every server. */
    UserSubscription = 256
}
/** https://discord.com/developers/docs/resources/channel#message-object-message-flags */
export declare enum MessageFlags {
    /** This message has been published to subscribed channels (via Channel Following) */
    Crossposted = 1,
    /** This message originated from a message in another channel (via Channel Following) */
    IsCrosspost = 2,
    /** Do not include any embeds when serializing this message */
    SuppressEmbeds = 4,
    /** The source message for this crosspost has been deleted (via Channel Following) */
    SourceMessageDeleted = 8,
    /** This message came from the urgent message system */
    Urgent = 16,
    /** This message has an associated thread, with the same id as the message */
    HasThread = 32,
    /** This message is only visible to the user who invoked the Interaction */
    Ephemeral = 64,
    /** This message is an Interaction Response and the bot is "thinking" */
    Loading = 128,
    /** This message failed to mention some roles and add their members to the thread */
    FailedToMentionSomeRolesInThread = 256,
    /** This message will not trigger push and desktop notifications */
    SuppressNotifications = 4096,
    /** This message is a voice message */
    IsVoiceMessage = 8192
}
/** https://discord.com/developers/docs/topics/gateway-events#activity-object-activity-flags */
export declare enum ActivityFlags {
    Instance = 1,
    Join = 2,
    Spectate = 4,
    JoinRequest = 8,
    Sync = 16,
    Play = 32,
    PartyPrivacyFriends = 64,
    PartyPrivacyVoiceChannel = 128,
    Embedded = 256
}
/** https://discord.com/developers/docs/resources/guild#integration-object-integration-expire-behaviors */
export declare enum IntegrationExpireBehaviors {
    RemoveRole = 0,
    Kick = 1
}
/** https://discord.com/developers/docs/topics/teams#data-models-membership-state-enum */
export declare enum TeamMembershipStates {
    Invited = 1,
    Accepted = 2
}
/** https://discord.com/developers/docs/topics/oauth2#application-application-flags */
export declare enum ApplicationFlags {
    /** Indicates if an app uses the Auto Moderation API. */
    ApplicationAutoModerationRuleCreateBadge = 64,
    /** Intent required for bots in **100 or more servers** to receive 'presence_update' events */
    GatewayPresence = 4096,
    /** Intent required for bots in under 100 servers to receive 'presence_update' events */
    GatewayPresenceLimited = 8192,
    /** Intent required for bots in **100 or more servers** to receive member-related events like 'guild_member_add'. */
    GatewayGuildMembers = 16384,
    /** Intent required for bots in under 100 servers to receive member-related events like 'guild_member_add'.  */
    GatewayGuildMembersLimited = 32768,
    /** Indicates unusual growth of an app that prevents verification */
    VerificationPendingGuildLimit = 65536,
    /** Indicates if an app is embedded within the Discord client (currently unavailable publicly) */
    Embedded = 131072,
    /** Intent required for bots in **100 or more servers** to receive [message content](https://support-dev.discord.com/hc/en-us/articles/4404772028055) */
    GatewayMessageContent = 262144,
    /** Intent required for bots in under 100 servers to receive [message content](https://support-dev.discord.com/hc/en-us/articles/4404772028055), found in Bot Settings */
    GatewayMessageContentLimited = 524288,
    /** Indicates if an app has registered global application commands */
    ApplicationCommandBadge = 8388608
}
/** https://discord.com/developers/docs/interactions/message-components#component-types */
export declare enum MessageComponentTypes {
    /** A container for other components */
    ActionRow = 1,
    /** A button object */
    Button = 2,
    /** A select menu for picking from choices */
    SelectMenu = 3,
    /** A text input object */
    InputText = 4,
    /** Select menu for users */
    SelectMenuUsers = 5,
    /** Select menu for roles */
    SelectMenuRoles = 6,
    /** Select menu for users and roles */
    SelectMenuUsersAndRoles = 7,
    /** Select menu for channels */
    SelectMenuChannels = 8
}
export declare enum TextStyles {
    /** Intended for short single-line text */
    Short = 1,
    /** Intended for much longer inputs */
    Paragraph = 2
}
/** https://discord.com/developers/docs/interactions/message-components#buttons-button-styles */
export declare enum ButtonStyles {
    /** A blurple button */
    Primary = 1,
    /** A grey button */
    Secondary = 2,
    /** A green button */
    Success = 3,
    /** A red button */
    Danger = 4,
    /** A button that navigates to a URL */
    Link = 5,
    /** A blurple button to show a Premium item in the shop */
    Premium = 6
}
/** https://discord.com/developers/docs/resources/channel#allowed-mentions-object-allowed-mention-types */
export declare enum AllowedMentionsTypes {
    /** Controls role mentions */
    RoleMentions = "roles",
    /** Controls user mentions */
    UserMentions = "users",
    /** Controls \@everyone and \@here mentions */
    EveryoneMentions = "everyone"
}
/** https://discord.com/developers/docs/resources/webhook#webhook-object-webhook-types */
export declare enum WebhookTypes {
    /** Incoming Webhooks can post messages to channels with a generated token */
    Incoming = 1,
    /** Channel Follower Webhooks are internal webhooks used with Channel Following to post new messages into channels */
    ChannelFollower = 2,
    /** Application webhooks are webhooks used with Interactions */
    Application = 3
}
/** https://discord.com/developers/docs/resources/channel#embed-object-embed-types */
export type EmbedTypes = 'rich' | 'image' | 'video' | 'gifv' | 'article' | 'link' | 'poll_result';
/** https://discord.com/developers/docs/resources/guild#guild-object-default-message-notification-level */
export declare enum DefaultMessageNotificationLevels {
    /** Members will receive notifications for all messages by default */
    AllMessages = 0,
    /** Members will receive notifications only for messages that \@mention them by default */
    OnlyMentions = 1
}
/** https://discord.com/developers/docs/resources/guild#guild-object-explicit-content-filter-level */
export declare enum ExplicitContentFilterLevels {
    /** Media content will not be scanned */
    Disabled = 0,
    /** Media content sent by members without roles will be scanned */
    MembersWithoutRoles = 1,
    /** Media content sent by all members will be scanned */
    AllMembers = 2
}
/** https://discord.com/developers/docs/resources/guild#guild-object-verification-level */
export declare enum VerificationLevels {
    /** Unrestricted */
    None = 0,
    /** Must have verified email on account */
    Low = 1,
    /** Must be registered on Discord for longer than 5 minutes */
    Medium = 2,
    /** Must be a member of the server for longer than 10 minutes */
    High = 3,
    /** Must have a verified phone number */
    VeryHigh = 4
}
/** https://discord.com/developers/docs/resources/guild#guild-object-guild-features */
export declare enum GuildFeatures {
    /** Guild has access to set an invite splash background */
    InviteSplash = "INVITE_SPLASH",
    /** Guild has access to set 384 kbps bitrate in voice (previously VIP voice servers) */
    VipRegions = "VIP_REGIONS",
    /** Guild has access to set a vanity URL */
    VanityUrl = "VANITY_URL",
    /** Guild is verified */
    Verified = "VERIFIED",
    /** Guild is partnered */
    Partnered = "PARTNERED",
    /** Guild can enable welcome screen, Membership Screening, stage channels and discovery, and receives community updates */
    Community = "COMMUNITY",
    /** Guild has enabled monetization. */
    CreatorMonetizableProvisional = "CREATOR_MONETIZABLE_PROVISIONAL",
    /** Guild has enabled the role subscription promo page. */
    CreatorStorePage = "CREATOR_STORE_PAGE",
    /** Guild has been set as a support server on the App Directory */
    DeveloperSupportServer = "DEVELOPER_SUPPORT_SERVER",
    /** Guild has access to create news channels */
    News = "NEWS",
    /** Guild is able to be discovered in the directory */
    Discoverable = "DISCOVERABLE",
    /** Guild is able to be featured in the directory */
    Featurable = "FEATURABLE",
    /** Guild has access to set an animated guild icon */
    AnimatedIcon = "ANIMATED_ICON",
    /** Guild has access to set a guild banner image */
    Banner = "BANNER",
    /** Guild has enabled the welcome screen */
    WelcomeScreenEnabled = "WELCOME_SCREEN_ENABLED",
    /** Guild has enabled [Membership Screening](https://discord.com/developers/docs/resources/guild#membership-screening-object) */
    MemberVerificationGateEnabled = "MEMBER_VERIFICATION_GATE_ENABLED",
    /** Guild has increased custom soundboard sound slots. */
    MoreSoundboard = "MORE_SOUNDBOARD",
    /** Guild can be previewed before joining via Membership Screening or the directory */
    PreviewEnabled = "PREVIEW_ENABLED",
    /** Guild has enabled ticketed events */
    TicketedEventsEnabled = "TICKETED_EVENTS_ENABLED",
    /** Guild has increased custom sticker slots */
    MoreStickers = "MORE_STICKERS",
    /** Guild is able to set role icons */
    RoleIcons = "ROLE_ICONS",
    /** Guild has role subscriptions that can be purchased. */
    RoleSubscriptionsAvailableForPurchase = "ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE",
    /** Guild has enabled role subscriptions. */
    RoleSubscriptionsEnabled = "ROLE_SUBSCRIPTIONS_ENABLED",
    /** Guild has created soundboard sounds. */
    Soundboard = "SOUNDBOARD",
    /** Guild has set up auto moderation rules */
    AutoModeration = "AUTO_MODERATION",
    /** Guild has paused invites, preventing new users from joining */
    InvitesDisabled = "INVITES_DISABLED",
    /** Guild has access to set an animated guild banner image */
    AnimatedBanner = "ANIMATED_BANNER",
    /** Guild has disabled alerts for join raids in the configured safety alerts channel */
    RaidAlertsDisabled = "RAID_ALERTS_DISABLED",
    /** Guild is using the old permissions configuration behavior */
    ApplicationCommandPermissionsV2 = "APPLICATION_COMMAND_PERMISSIONS_V2"
}
/** https://discord.com/developers/docs/resources/guild#guild-object-mfa-level */
export declare enum MfaLevels {
    /** Guild has no MFA/2FA requirement for moderation actions */
    None = 0,
    /** Guild has a 2FA requirement for moderation actions */
    Elevated = 1
}
/** https://discord.com/developers/docs/resources/guild#guild-object-system-channel-flags */
export declare enum SystemChannelFlags {
    /** Suppress member join notifications */
    SuppressJoinNotifications = 1,
    /** Suppress server boost notifications */
    SuppressPremiumSubscriptions = 2,
    /** Suppress server setup tips */
    SuppressGuildReminderNotifications = 4,
    /** Hide member join sticker reply buttons */
    SuppressJoinNotificationReplies = 8
}
/** https://discord.com/developers/docs/resources/guild#guild-object-premium-tier */
export declare enum PremiumTiers {
    /** Guild has not unlocked any Server Boost perks */
    None = 0,
    /** Guild has unlocked Server Boost level 1 perks */
    Tier1 = 1,
    /** Guild has unlocked Server Boost level 2 perks */
    Tier2 = 2,
    /** Guild has unlocked Server Boost level 3 perks */
    Tier3 = 3
}
/** https://discord.com/developers/docs/resources/guild#guild-object-guild-nsfw-level */
export declare enum GuildNsfwLevel {
    Default = 0,
    Explicit = 1,
    Safe = 2,
    AgeRestricted = 3
}
/** https://discord.com/developers/docs/resources/channel#channel-object-channel-types */
export declare enum ChannelTypes {
    /** A text channel within a server */
    GuildText = 0,
    /** A direct message between users */
    DM = 1,
    /** A voice channel within a server */
    GuildVoice = 2,
    /** A direct message between multiple users */
    GroupDm = 3,
    /** An organizational category that contains up to 50 channels */
    GuildCategory = 4,
    /** A channel that users can follow and crosspost into their own server */
    GuildAnnouncement = 5,
    /** A temporary sub-channel within a GUILD_ANNOUNCEMENT channel */
    AnnouncementThread = 10,
    /** A temporary sub-channel within a GUILD_TEXT or GUILD_FORUM channel */
    PublicThread = 11,
    /** A temporary sub-channel within a GUILD_TEXT channel that is only viewable by those invited and those with the MANAGE_THREADS permission */
    PrivateThread = 12,
    /** A voice channel for hosting events with an audience */
    GuildStageVoice = 13,
    /** A channel in a hub containing the listed servers */
    GuildDirectory = 14,
    /** A channel which can only contains threads */
    GuildForum = 15,
    /** Channel that can only contain threads, similar to GUILD_FORUM channels */
    GuildMedia = 16
}
export declare enum OverwriteTypes {
    Role = 0,
    Member = 1
}
export declare enum VideoQualityModes {
    /** Discord chooses the quality for optimal performance */
    Auto = 1,
    /** 720p */
    Full = 2
}
/** https://discord.com/developers/docs/topics/gateway-events#activity-object-activity-types */
export declare enum ActivityTypes {
    Playing = 0,
    Streaming = 1,
    Listening = 2,
    Watching = 3,
    Custom = 4,
    Competing = 5
}
/** https://discord.com/developers/docs/resources/channel#message-object-message-types */
export declare enum MessageTypes {
    Default = 0,
    RecipientAdd = 1,
    RecipientRemove = 2,
    Call = 3,
    ChannelNameChange = 4,
    ChannelIconChange = 5,
    ChannelPinnedMessage = 6,
    UserJoin = 7,
    GuildBoost = 8,
    GuildBoostTier1 = 9,
    GuildBoostTier2 = 10,
    GuildBoostTier3 = 11,
    ChannelFollowAdd = 12,
    GuildDiscoveryDisqualified = 14,
    GuildDiscoveryRequalified = 15,
    GuildDiscoveryGracePeriodInitialWarning = 16,
    GuildDiscoveryGracePeriodFinalWarning = 17,
    ThreadCreated = 18,
    Reply = 19,
    ChatInputCommand = 20,
    ThreadStarterMessage = 21,
    GuildInviteReminder = 22,
    ContextMenuCommand = 23,
    AutoModerationAction = 24,
    RoleSubscriptionPurchase = 25,
    InteractionPremiumUpsell = 26,
    StageStart = 27,
    StageEnd = 28,
    StageSpeaker = 29,
    StageTopic = 31,
    GuildApplicationPremiumSubscription = 32,
    GuildIncidentAlertModeEnabled = 36,
    GuildIncidentAlertModeDisabled = 37,
    GuildIncidentReportRaid = 38,
    GuildIncidentReportFalseAlarm = 39,
    PurchaseNotification = 44,
    PollResult = 46
}
/** https://discord.com/developers/docs/resources/channel#message-object-message-activity-types */
export declare enum MessageActivityTypes {
    Join = 1,
    Spectate = 2,
    Listen = 3,
    JoinRequest = 5
}
/** https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types */
export declare enum StickerTypes {
    /** an official sticker in a pack */
    Standard = 1,
    /** a sticker uploaded to a guild for the guild's members */
    Guild = 2
}
/** https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types */
export declare enum StickerFormatTypes {
    Png = 1,
    APng = 2,
    Lottie = 3,
    Gif = 4
}
/** https://discord.com/developers/docs/interactions/slash-commands#interaction-interactiontype */
export declare enum InteractionTypes {
    Ping = 1,
    ApplicationCommand = 2,
    MessageComponent = 3,
    ApplicationCommandAutocomplete = 4,
    ModalSubmit = 5
}
/** https://discord.com/developers/docs/interactions/slash-commands#applicationcommandoptiontype */
export declare enum ApplicationCommandOptionTypes {
    SubCommand = 1,
    SubCommandGroup = 2,
    String = 3,
    Integer = 4,
    Boolean = 5,
    User = 6,
    Channel = 7,
    Role = 8,
    Mentionable = 9,
    Number = 10,
    Attachment = 11
}
/** https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events */
export declare enum AuditLogEvents {
    /** Server settings were updated */
    GuildUpdate = 1,
    /** Channel was created */
    ChannelCreate = 10,
    /** Channel settings were updated */
    ChannelUpdate = 11,
    /** Channel was deleted */
    ChannelDelete = 12,
    /** Permission overwrite was added to a channel */
    ChannelOverwriteCreate = 13,
    /** Permission overwrite was updated for a channel */
    ChannelOverwriteUpdate = 14,
    /** Permission overwrite was deleted from a channel */
    ChannelOverwriteDelete = 15,
    /** Member was removed from server */
    MemberKick = 20,
    /** Members were pruned from server */
    MemberPrune = 21,
    /** Member was banned from server */
    MemberBanAdd = 22,
    /** Server ban was lifted for a member */
    MemberBanRemove = 23,
    /** Member was updated in server */
    MemberUpdate = 24,
    /** Member was added or removed from a role */
    MemberRoleUpdate = 25,
    /** Member was moved to a different voice channel */
    MemberMove = 26,
    /** Member was disconnected from a voice channel */
    MemberDisconnect = 27,
    /** Bot user was added to server */
    BotAdd = 28,
    /** Role was created */
    RoleCreate = 30,
    /** Role was edited */
    RoleUpdate = 31,
    /** Role was deleted */
    RoleDelete = 32,
    /** Server invite was created */
    InviteCreate = 40,
    /** Server invite was updated */
    InviteUpdate = 41,
    /** Server invite was deleted */
    InviteDelete = 42,
    /** Webhook was created */
    WebhookCreate = 50,
    /** Webhook properties or channel were updated */
    WebhookUpdate = 51,
    /** Webhook was deleted */
    WebhookDelete = 52,
    /** Emoji was created */
    EmojiCreate = 60,
    /** Emoji name was updated */
    EmojiUpdate = 61,
    /** Emoji was deleted */
    EmojiDelete = 62,
    /** Single message was deleted */
    MessageDelete = 72,
    /** Multiple messages were deleted */
    MessageBulkDelete = 73,
    /** Messaged was pinned to a channel */
    MessagePin = 74,
    /** Message was unpinned from a channel */
    MessageUnpin = 75,
    /** App was added to server */
    IntegrationCreate = 80,
    /** App was updated (as an example, its scopes were updated) */
    IntegrationUpdate = 81,
    /** App was removed from server */
    IntegrationDelete = 82,
    /** Stage instance was created (stage channel becomes live) */
    StageInstanceCreate = 83,
    /** Stage instace details were updated */
    StageInstanceUpdate = 84,
    /** Stage instance was deleted (stage channel no longer live) */
    StageInstanceDelete = 85,
    /** Sticker was created */
    StickerCreate = 90,
    /** Sticker details were updated */
    StickerUpdate = 91,
    /** Sticker was deleted */
    StickerDelete = 92,
    /** Event was created */
    GuildScheduledEventCreate = 100,
    /** Event was updated */
    GuildScheduledEventUpdate = 101,
    /** Event was cancelled */
    GuildScheduledEventDelete = 102,
    /** Thread was created in a channel */
    ThreadCreate = 110,
    /** Thread was updated */
    ThreadUpdate = 111,
    /** Thread was deleted */
    ThreadDelete = 112,
    /** Permissions were updated for a command */
    ApplicationCommandPermissionUpdate = 121,
    /** Soundboard sound was created */
    SoundboardSoundCreate = 130,
    /** Soundboard sound was updated */
    SoundboardSoundUpdate = 131,
    /** Soundboard sound was deleted */
    SoundboardSoundDelete = 132,
    /** Auto moderation rule was created */
    AutoModerationRuleCreate = 140,
    /** Auto moderation rule was updated */
    AutoModerationRuleUpdate = 141,
    /** Auto moderation rule was deleted */
    AutoModerationRuleDelete = 142,
    /** Message was blocked by AutoMod according to a rule. */
    AutoModerationBlockMessage = 143,
    /** Message was flagged by AutoMod */
    AudoModerationFlagMessage = 144,
    /** Member was timed out by AutoMod */
    AutoModerationMemberTimedOut = 145,
    /** Creator monetization request was created */
    CreatorMonetizationRequestCreated = 150,
    /** Creator monetization terms were accepted */
    CreatorMonetizationTermsAccepted = 151,
    /** Guild Onboarding Question was created */
    OnBoardingPromptCreate = 163,
    /** Guild Onboarding Question was updated */
    OnBoardingPromptUpdate = 164,
    /** Guild Onboarding Question was deleted */
    OnBoardingPromptDelete = 165,
    /** Guild Onboarding was created */
    OnBoardingCreate = 166,
    /** Guild Onboarding was updated */
    OnBoardingUpdate = 167,
    /** Guild Server Guide was created */
    HomeSettingsCreate = 190,
    /** Guild Server Guide was updated */
    HomeSettingsUpdate = 191
}
export declare enum ScheduledEventPrivacyLevel {
    /** the scheduled event is only accessible to guild members */
    GuildOnly = 2
}
export declare enum ScheduledEventEntityType {
    StageInstance = 1,
    Voice = 2,
    External = 3
}
export declare enum ScheduledEventStatus {
    Scheduled = 1,
    Active = 2,
    Completed = 3,
    Canceled = 4
}
/** https://discord.com/developers/docs/resources/invite#invite-object-target-user-types */
export declare enum TargetTypes {
    Stream = 1,
    EmbeddedApplication = 2
}
export declare enum ApplicationCommandTypes {
    /** A text-based command that shows up when a user types `/` */
    ChatInput = 1,
    /** A UI-based command that shows up when you right click or tap on a user */
    User = 2,
    /** A UI-based command that shows up when you right click or tap on a message */
    Message = 3,
    /** A UI-based command that represents the primary way to invoke an app's Activity */
    PrimaryEntryPoint = 4
}
export declare enum ApplicationCommandPermissionTypes {
    Role = 1,
    User = 2,
    Channel = 3
}
/** https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags */
export declare const BitwisePermissionFlags: {
    /** Allows creation of instant invites */
    readonly CREATE_INSTANT_INVITE: bigint;
    /** Allows kicking members */
    readonly KICK_MEMBERS: bigint;
    /** Allows banning members */
    readonly BAN_MEMBERS: bigint;
    /** Allows all permissions and bypasses channel permission overwrites */
    readonly ADMINISTRATOR: bigint;
    /** Allows management and editing of channels */
    readonly MANAGE_CHANNELS: bigint;
    /** Allows management and editing of the guild */
    readonly MANAGE_GUILD: bigint;
    /** Allows for the addition of reactions to messages */
    readonly ADD_REACTIONS: bigint;
    /** Allows for viewing of audit logs */
    readonly VIEW_AUDIT_LOG: bigint;
    /** Allows for using priority speaker in a voice channel */
    readonly PRIORITY_SPEAKER: bigint;
    /** Allows the user to go live */
    readonly STREAM: bigint;
    /** Allows guild members to view a channel, which includes reading messages in text channels and joining voice channels */
    readonly VIEW_CHANNEL: bigint;
    /** Allows for sending messages in a channel. (does not allow sending messages in threads) */
    readonly SEND_MESSAGES: bigint;
    /** Allows for sending of /tts messages */
    readonly SEND_TTS_MESSAGES: bigint;
    /** Allows for deletion of other users messages */
    readonly MANAGE_MESSAGES: bigint;
    /** Links sent by users with this permission will be auto-embedded */
    readonly EMBED_LINKS: bigint;
    /** Allows for uploading images and files */
    readonly ATTACH_FILES: bigint;
    /** Allows for reading of message history */
    readonly READ_MESSAGE_HISTORY: bigint;
    /** Allows for using the \@everyone tag to notify all users in a channel, and the \@here tag to notify all online users in a channel */
    readonly MENTION_EVERYONE: bigint;
    /** Allows the usage of custom emojis from other servers */
    readonly USE_EXTERNAL_EMOJIS: bigint;
    /** Allows for viewing guild insights */
    readonly VIEW_GUILD_INSIGHTS: bigint;
    /** Allows for joining of a voice channel */
    readonly CONNECT: bigint;
    /** Allows for speaking in a voice channel */
    readonly SPEAK: bigint;
    /** Allows for muting members in a voice channel */
    readonly MUTE_MEMBERS: bigint;
    /** Allows for deafening of members in a voice channel */
    readonly DEAFEN_MEMBERS: bigint;
    /** Allows for moving of members between voice channels */
    readonly MOVE_MEMBERS: bigint;
    /** Allows for using voice-activity-detection in a voice channel */
    readonly USE_VAD: bigint;
    /** Allows for modification of own nickname */
    readonly CHANGE_NICKNAME: bigint;
    /** Allows for modification of other users nicknames */
    readonly MANAGE_NICKNAMES: bigint;
    /** Allows management and editing of roles */
    readonly MANAGE_ROLES: bigint;
    /** Allows management and editing of webhooks */
    readonly MANAGE_WEBHOOKS: bigint;
    /** Allows for editing and deleting emojis, stickers, and soundboard sounds created by all users */
    readonly MANAGE_GUILD_EXPRESSIONS: bigint;
    /** Allows members to use application commands in text channels */
    readonly USE_SLASH_COMMANDS: bigint;
    /** Allows for requesting to speak in stage channels. */
    readonly REQUEST_TO_SPEAK: bigint;
    /** Allows for editing and deleting scheduled events created by all users */
    readonly MANAGE_EVENTS: bigint;
    /** Allows for deleting and archiving threads, and viewing all private threads */
    readonly MANAGE_THREADS: bigint;
    /** Allows for creating public and announcement threads */
    readonly CREATE_PUBLIC_THREADS: bigint;
    /** Allows for creating private threads */
    readonly CREATE_PRIVATE_THREADS: bigint;
    /** Allows the usage of custom stickers from other servers */
    readonly USE_EXTERNAL_STICKERS: bigint;
    /** Allows for sending messages in threads */
    readonly SEND_MESSAGES_IN_THREADS: bigint;
    /** Allows for launching activities (applications with the `EMBEDDED` flag) in a voice channel. */
    readonly USE_EMBEDDED_ACTIVITIES: bigint;
    /** Allows for timing out users to prevent them from sending or reacting to messages in chat and threads, and from speaking in voice and stage channels */
    readonly MODERATE_MEMBERS: bigint;
    /** Allows for viewing role subscription insights. */
    readonly VIEW_CREATOR_MONETIZATION_ANALYTICS: bigint;
    /** Allows for using soundboard in a voice channel. */
    readonly USE_SOUNDBOARD: bigint;
    /** Allows for creating emojis, stickers, and soundboard sounds, and editing and deleting those created by the current user */
    readonly CREATE_GUILD_EXPRESSIONS: bigint;
    /** Allows for creating scheduled events, and editing and deleting those created by the current user */
    readonly CREATE_EVENTS: bigint;
    /** Allows the usage of custom soundboards sounds from other servers */
    readonly USE_EXTERNAL_SOUNDS: bigint;
    /** Allows sending voice messages */
    readonly SEND_VOICE_MESSAGES: bigint;
    /** Allows sending polls */
    readonly SEND_POLLS: bigint;
    /** Allows user-installed apps to send public responses. When disabled, users will still be allowed to use their apps but the responses will be ephemeral. This only applies to apps not also installed to the server. */
    readonly USE_EXTERNAL_APPS: bigint;
};
export type PermissionStrings = keyof typeof BitwisePermissionFlags;
/** https://discord.com/developers/docs/topics/opcodes-and-status-codes#opcodes-and-status-codes */
export declare enum GatewayCloseEventCodes {
    /** A normal closure of the gateway. You may attempt to reconnect. */
    NormalClosure = 1000,
    /** We're not sure what went wrong. Try reconnecting? */
    UnknownError = 4000,
    /** You sent an invalid [Gateway opcode](https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes) or an invalid payload for an opcode. Don't do that! */
    UnknownOpcode = 4001,
    /** You sent an invalid [payload](https://discord.com/developers/docs/topics/gateway#sending-payloads) to us. Don't do that! */
    DecodeError = 4002,
    /** You sent us a payload prior to [identifying](https://discord.com/developers/docs/topics/gateway-events#identify), or this session has been invalidated. */
    NotAuthenticated = 4003,
    /** The account token sent with your [identify payload](https://discord.com/developers/docs/topics/gateway-events#identify) is incorrect. */
    AuthenticationFailed = 4004,
    /** You sent more than one identify payload. Don't do that! */
    AlreadyAuthenticated = 4005,
    /** The sequence sent when [resuming](https://discord.com/developers/docs/topics/gateway-events#resume) the session was invalid. Reconnect and start a new session. */
    InvalidSeq = 4007,
    /** Woah nelly! You're sending payloads to us too quickly. Slow it down! You will be disconnected on receiving this. */
    RateLimited = 4008,
    /** Your session timed out. Reconnect and start a new one. */
    SessionTimedOut = 4009,
    /** You sent us an invalid [shard when identifying](https://discord.com/developers/docs/topics/gateway#sharding). */
    InvalidShard = 4010,
    /** The session would have handled too many guilds - you are required to [shard](https://discord.com/developers/docs/topics/gateway#sharding) your connection in order to connect. */
    ShardingRequired = 4011,
    /** You sent an invalid version for the gateway. */
    InvalidApiVersion = 4012,
    /** You sent an invalid intent for a [Gateway Intent](https://discord.com/developers/docs/topics/gateway#gateway-intents). You may have incorrectly calculated the bitwise value. */
    InvalidIntents = 4013,
    /** You sent a disallowed intent for a [Gateway Intent](https://discord.com/developers/docs/topics/gateway#gateway-intents). You may have tried to specify an intent that you [have not enabled or are not approved for](https://discord.com/developers/docs/topics/gateway#privileged-intents). */
    DisallowedIntents = 4014
}
/** https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes */
export declare enum GatewayOpcodes {
    /** An event was dispatched. */
    Dispatch = 0,
    /** Fired periodically by the client to keep the connection alive. */
    Heartbeat = 1,
    /** Starts a new session during the initial handshake. */
    Identify = 2,
    /** Update the client's presence. */
    PresenceUpdate = 3,
    /** Used to join/leave or move between voice channels. */
    VoiceStateUpdate = 4,
    /** Resume a previous session that was disconnected. */
    Resume = 6,
    /** You should attempt to reconnect and resume immediately. */
    Reconnect = 7,
    /** Request information about offline guild members in a large guild. */
    RequestGuildMembers = 8,
    /** The session has been invalidated. You should reconnect and identify/resume accordingly. */
    InvalidSession = 9,
    /** Sent immediately after connecting, contains the `heartbeat_interval` to use. */
    Hello = 10,
    /** Sent in response to receiving a heartbeat to acknowledge that it has been received. */
    HeartbeatACK = 11,
    /** Used to request soundboard sounds for a list of guilds. */
    RequestSoundboardSounds = 31
}
export type GatewayDispatchEventNames = 'READY' | 'APPLICATION_COMMAND_PERMISSIONS_UPDATE' | 'AUTO_MODERATION_RULE_CREATE' | 'AUTO_MODERATION_RULE_UPDATE' | 'AUTO_MODERATION_RULE_DELETE' | 'AUTO_MODERATION_ACTION_EXECUTION' | 'CHANNEL_CREATE' | 'CHANNEL_UPDATE' | 'CHANNEL_DELETE' | 'CHANNEL_PINS_UPDATE' | 'THREAD_CREATE' | 'THREAD_UPDATE' | 'THREAD_DELETE' | 'THREAD_LIST_SYNC' | 'THREAD_MEMBER_UPDATE' | 'THREAD_MEMBERS_UPDATE' | 'GUILD_AUDIT_LOG_ENTRY_CREATE' | 'GUILD_CREATE' | 'GUILD_UPDATE' | 'GUILD_DELETE' | 'GUILD_BAN_ADD' | 'GUILD_BAN_REMOVE' | 'GUILD_EMOJIS_UPDATE' | 'GUILD_STICKERS_UPDATE' | 'GUILD_INTEGRATIONS_UPDATE' | 'GUILD_MEMBER_ADD' | 'GUILD_MEMBER_REMOVE' | 'GUILD_MEMBER_UPDATE' | 'GUILD_MEMBERS_CHUNK' | 'GUILD_ROLE_CREATE' | 'GUILD_ROLE_UPDATE' | 'GUILD_ROLE_DELETE' | 'GUILD_SCHEDULED_EVENT_CREATE' | 'GUILD_SCHEDULED_EVENT_UPDATE' | 'GUILD_SCHEDULED_EVENT_DELETE' | 'GUILD_SCHEDULED_EVENT_USER_ADD' | 'GUILD_SCHEDULED_EVENT_USER_REMOVE' | 'GUILD_SOUNDBOARD_SOUND_CREATE' | 'GUILD_SOUNDBOARD_SOUND_UPDATE' | 'GUILD_SOUNDBOARD_SOUND_DELETE' | 'GUILD_SOUNDBOARD_SOUNDS_UPDATE' | 'SOUNDBOARD_SOUNDS' | 'INTEGRATION_CREATE' | 'INTEGRATION_UPDATE' | 'INTEGRATION_DELETE' | 'INTERACTION_CREATE' | 'INVITE_CREATE' | 'INVITE_DELETE' | 'MESSAGE_CREATE' | 'MESSAGE_UPDATE' | 'MESSAGE_DELETE' | 'MESSAGE_DELETE_BULK' | 'MESSAGE_REACTION_ADD' | 'MESSAGE_REACTION_REMOVE' | 'MESSAGE_REACTION_REMOVE_ALL' | 'MESSAGE_REACTION_REMOVE_EMOJI' | 'PRESENCE_UPDATE' | 'STAGE_INSTANCE_CREATE' | 'STAGE_INSTANCE_UPDATE' | 'STAGE_INSTANCE_DELETE' | 'TYPING_START' | 'USER_UPDATE' | 'VOICE_CHANNEL_EFFECT_SEND' | 'VOICE_STATE_UPDATE' | 'VOICE_SERVER_UPDATE' | 'WEBHOOKS_UPDATE' | 'ENTITLEMENT_CREATE' | 'ENTITLEMENT_UPDATE' | 'ENTITLEMENT_DELETE' | 'SUBSCRIPTION_CREATE' | 'SUBSCRIPTION_UPDATE' | 'SUBSCRIPTION_DELETE' | 'MESSAGE_POLL_VOTE_ADD' | 'MESSAGE_POLL_VOTE_REMOVE';
export type GatewayEventNames = GatewayDispatchEventNames | 'RESUMED';
/** https://discord.com/developers/docs/topics/gateway#list-of-intents */
export declare enum GatewayIntents {
    /**
     * - GUILD_CREATE
     * - GUILD_UPDATE
     * - GUILD_DELETE
     * - GUILD_ROLE_CREATE
     * - GUILD_ROLE_UPDATE
     * - GUILD_ROLE_DELETE
     * - CHANNEL_CREATE
     * - CHANNEL_UPDATE
     * - CHANNEL_DELETE
     * - CHANNEL_PINS_UPDATE
     * - THREAD_CREATE
     * - THREAD_UPDATE
     * - THREAD_DELETE
     * - THREAD_LIST_SYNC
     * - THREAD_MEMBER_UPDATE
     * - THREAD_MEMBERS_UPDATE
     * - STAGE_INSTANCE_CREATE
     * - STAGE_INSTANCE_UPDATE
     * - STAGE_INSTANCE_DELETE
     */
    Guilds = 1,
    /**
     * - GUILD_MEMBER_ADD
     * - GUILD_MEMBER_UPDATE
     * - GUILD_MEMBER_REMOVE
     * - THREAD_MEMBERS_UPDATE
     *
     * This is a privileged intent.
     */
    GuildMembers = 2,
    /**
     * - GUILD_AUDIT_LOG_ENTRY_CREATE
     * - GUILD_BAN_ADD
     * - GUILD_BAN_REMOVE
     */
    GuildModeration = 4,
    /**
     * - GUILD_EMOJIS_UPDATE
     * - GUILD_STICKERS_UPDATE
     * - GUILD_SOUNDBOARD_SOUND_CREATE
     * - GUILD_SOUNDBOARD_SOUND_UPDATE
     * - GUILD_SOUNDBOARD_SOUND_DELETE
     * - GUILD_SOUNDBOARD_SOUNDS_UPDATE
     */
    GuildExpressions = 8,
    /**
     * - GUILD_INTEGRATIONS_UPDATE
     * - INTEGRATION_CREATE
     * - INTEGRATION_UPDATE
     * - INTEGRATION_DELETE
     */
    GuildIntegrations = 16,
    /**
     * - WEBHOOKS_UPDATE
     */
    GuildWebhooks = 32,
    /**
     * - INVITE_CREATE
     * - INVITE_DELETE
     */
    GuildInvites = 64,
    /**
     * - VOICE_STATE_UPDATE
     * - VOICE_CHANNEL_EFFECT_SEND
     */
    GuildVoiceStates = 128,
    /**
     * - PRESENCE_UPDATE
     *
     * This is a privileged intent.
     */
    GuildPresences = 256,
    /**
     * - MESSAGE_CREATE
     * - MESSAGE_UPDATE
     * - MESSAGE_DELETE
     * - MESSAGE_DELETE_BULK
     *
     * The messages do not contain content by default.
     * If you want to receive their content too, you need to turn on the privileged `MESSAGE_CONTENT` intent. */
    GuildMessages = 512,
    /**
     * - MESSAGE_REACTION_ADD
     * - MESSAGE_REACTION_REMOVE
     * - MESSAGE_REACTION_REMOVE_ALL
     * - MESSAGE_REACTION_REMOVE_EMOJI
     */
    GuildMessageReactions = 1024,
    /**
     * - TYPING_START
     */
    GuildMessageTyping = 2048,
    /**
     * - CHANNEL_CREATE
     * - MESSAGE_CREATE
     * - MESSAGE_UPDATE
     * - MESSAGE_DELETE
     * - CHANNEL_PINS_UPDATE
     */
    DirectMessages = 4096,
    /**
     * - MESSAGE_REACTION_ADD
     * - MESSAGE_REACTION_REMOVE
     * - MESSAGE_REACTION_REMOVE_ALL
     * - MESSAGE_REACTION_REMOVE_EMOJI
     */
    DirectMessageReactions = 8192,
    /**
     * - TYPING_START
     */
    DirectMessageTyping = 16384,
    /**
     * This intent will add all content related values to message events.
     *
     * This is a privileged intent.
     */
    MessageContent = 32768,
    /**
     * - GUILD_SCHEDULED_EVENT_CREATE
     * - GUILD_SCHEDULED_EVENT_UPDATE
     * - GUILD_SCHEDULED_EVENT_DELETE
     * - GUILD_SCHEDULED_EVENT_USER_ADD this is experimental and unstable.
     * - GUILD_SCHEDULED_EVENT_USER_REMOVE this is experimental and unstable.
     */
    GuildScheduledEvents = 65536,
    /**
     * - AUTO_MODERATION_RULE_CREATE
     * - AUTO_MODERATION_RULE_UPDATE
     * - AUTO_MODERATION_RULE_DELETE
     */
    AutoModerationConfiguration = 1048576,
    /**
     * - AUTO_MODERATION_ACTION_EXECUTION
     */
    AutoModerationExecution = 2097152,
    /**
     * - MESSAGE_POLL_VOTE_ADD
     * - MESSAGE_POLL_VOTE_REMOVE
     */
    GuildMessagePolls = 16777216,
    /**
     * - MESSAGE_POLL_VOTE_ADD
     * - MESSAGE_POLL_VOTE_REMOVE
     */
    DirectMessagePolls = 33554432
}
/** https://discord.com/developers/docs/topics/gateway#list-of-intents */
export declare const Intents: typeof GatewayIntents;
/** https://discord.com/developers/docs/interactions/slash-commands#interaction-response-interactionresponsetype */
export declare enum InteractionResponseTypes {
    /** ACK a `Ping` */
    Pong = 1,
    /** Respond to an interaction with a message */
    ChannelMessageWithSource = 4,
    /** ACK an interaction and edit a response later, the user sees a loading state */
    DeferredChannelMessageWithSource = 5,
    /** For components, ACK an interaction and edit the original message later; the user does not see a loading state */
    DeferredUpdateMessage = 6,
    /** For components, edit the message the component was attached to */
    UpdateMessage = 7,
    /** For Application Command Options, send an autocomplete result */
    ApplicationCommandAutocompleteResult = 8,
    /** For Command or Component interactions, send a Modal response */
    Modal = 9,
    /**
     * Respond to an interaction with an upgrade button, only available for apps with monetization enabled
     *
     * @deprecated You should migrate to the premium button components
     */
    PremiumRequired = 10,
    /**
     * Launch the Activity associated with the app.
     *
     * @remarks
     * Only available for apps with Activities enabled
     */
    LaunchActivity = 12
}
export declare enum SortOrderTypes {
    /** Sort forum posts by activity */
    LatestActivity = 0,
    /** Sort forum posts by creation time (from most recent to oldest) */
    CreationDate = 1
}
export declare enum ForumLayout {
    /** No default has been set for forum channel. */
    NotSet = 0,
    /** Display posts as a list. */
    ListView = 1,
    /** Display posts as a collection of tiles. */
    GalleryView = 2
}
/**
 * https://discord.com/developers/docs/reference#image-formatting
 * json is only for stickers
 */
export type ImageFormat = 'jpg' | 'jpeg' | 'png' | 'webp' | 'gif' | 'json';
/** https://discord.com/developers/docs/reference#image-formatting */
export type ImageSize = 16 | 32 | 64 | 128 | 256 | 512 | 1024 | 2048 | 4096;
export declare enum Locales {
    Indonesian = "id",
    Danish = "da",
    German = "de",
    EnglishUk = "en-GB",
    EnglishUs = "en-US",
    Spanish = "es-ES",
    SpanishLatam = "es-419",
    French = "fr",
    Croatian = "hr",
    Italian = "it",
    Lithuanian = "lt",
    Hungarian = "hu",
    Dutch = "nl",
    Norwegian = "no",
    Polish = "pl",
    PortugueseBrazilian = "pt-BR",
    RomanianRomania = "ro",
    Finnish = "fi",
    Swedish = "sv-SE",
    Vietnamese = "vi",
    Turkish = "tr",
    Czech = "cs",
    Greek = "el",
    Bulgarian = "bg",
    Russian = "ru",
    Ukrainian = "uk",
    Hindi = "hi",
    Thai = "th",
    ChineseChina = "zh-CN",
    Japanese = "ja",
    ChineseTaiwan = "zh-TW",
    Korean = "ko"
}
export type Localization = Partial<Record<Locales, string>>;
export type AtLeastOne<T, U = {
    [K in keyof T]: Pick<T, K>;
}> = Partial<T> & U[keyof U];
export type CamelCase<S extends string> = S extends `${infer T}_${infer U}` ? `${T}${Capitalize<CamelCase<U>>}` : S;
export type SnakeCase<S extends string> = S extends `${infer T}${infer U}` ? `${T extends Lowercase<T> ? '' : '_'}${Lowercase<T>}${SnakeCase<U>}` : S;
export type Camelize<T> = T extends any[] ? T extends Record<any, any>[] ? Camelize<T[number]>[] : T : T extends Record<any, any> ? {
    [K in keyof T as CamelCase<K & string>]: Camelize<T[K]>;
} : T;
export type Snakelize<T> = T extends any[] ? T extends Record<any, any>[] ? Snakelize<T[number]>[] : T : T extends Record<any, any> ? {
    [K in keyof T as SnakeCase<K & string>]: Snakelize<T[K]>;
} : T;
export type PickPartial<T, K extends keyof T> = {
    [P in keyof T]?: T[P] | undefined;
} & {
    [P in K]: T[P];
};
export type RecursivePartial<T> = T extends object ? (T extends (...args: never[]) => unknown ? T : {
    [K in keyof T]?: RecursivePartial<T[K]>;
}) : T;
//# sourceMappingURL=shared.d.ts.map