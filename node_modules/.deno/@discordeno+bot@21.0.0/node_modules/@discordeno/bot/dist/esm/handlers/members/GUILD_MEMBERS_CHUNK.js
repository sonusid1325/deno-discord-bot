import { camelize } from '@discordeno/utils';
export async function handleGuildMembersChunk(bot, data) {
    const payload = data.d;
    // If it's not enabled skip checks.
    if (!bot.gateway.cache.requestMembers.enabled) return;
    // If this request has no nonce, skip checks.
    if (!payload.nonce) return;
    const pending = bot.gateway.cache.requestMembers.pending.get(payload.nonce);
    if (!pending) return;
    if (payload.chunk_count === 1) pending.members = payload.members;
    else pending.members.push(...payload.members);
    // If this is not the final chunk, just save to cache.
    if (payload.chunk_index + 1 < payload.chunk_count) return;
    // Resolve the promise that all requests are done.
    pending.resolve(camelize(pending.members));
    // Delete the cache to clean up once its done.
    bot.gateway.cache.requestMembers.pending.delete(payload.nonce);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9oYW5kbGVycy9tZW1iZXJzL0dVSUxEX01FTUJFUlNfQ0hVTksudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBEaXNjb3JkR2F0ZXdheVBheWxvYWQsIERpc2NvcmRHdWlsZE1lbWJlcnNDaHVuayB9IGZyb20gJ0BkaXNjb3JkZW5vL3R5cGVzJ1xuaW1wb3J0IHsgY2FtZWxpemUgfSBmcm9tICdAZGlzY29yZGVuby91dGlscydcbmltcG9ydCB0eXBlIHsgQm90IH0gZnJvbSAnLi4vLi4vaW5kZXguanMnXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoYW5kbGVHdWlsZE1lbWJlcnNDaHVuayhib3Q6IEJvdCwgZGF0YTogRGlzY29yZEdhdGV3YXlQYXlsb2FkKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnN0IHBheWxvYWQgPSBkYXRhLmQgYXMgRGlzY29yZEd1aWxkTWVtYmVyc0NodW5rXG5cbiAgLy8gSWYgaXQncyBub3QgZW5hYmxlZCBza2lwIGNoZWNrcy5cbiAgaWYgKCFib3QuZ2F0ZXdheS5jYWNoZS5yZXF1ZXN0TWVtYmVycy5lbmFibGVkKSByZXR1cm5cblxuICAvLyBJZiB0aGlzIHJlcXVlc3QgaGFzIG5vIG5vbmNlLCBza2lwIGNoZWNrcy5cbiAgaWYgKCFwYXlsb2FkLm5vbmNlKSByZXR1cm5cblxuICBjb25zdCBwZW5kaW5nID0gYm90LmdhdGV3YXkuY2FjaGUucmVxdWVzdE1lbWJlcnMucGVuZGluZy5nZXQocGF5bG9hZC5ub25jZSlcblxuICBpZiAoIXBlbmRpbmcpIHJldHVyblxuXG4gIGlmIChwYXlsb2FkLmNodW5rX2NvdW50ID09PSAxKSBwZW5kaW5nLm1lbWJlcnMgPSBwYXlsb2FkLm1lbWJlcnNcbiAgZWxzZSBwZW5kaW5nLm1lbWJlcnMucHVzaCguLi5wYXlsb2FkLm1lbWJlcnMpXG5cbiAgLy8gSWYgdGhpcyBpcyBub3QgdGhlIGZpbmFsIGNodW5rLCBqdXN0IHNhdmUgdG8gY2FjaGUuXG4gIGlmIChwYXlsb2FkLmNodW5rX2luZGV4ICsgMSA8IHBheWxvYWQuY2h1bmtfY291bnQpIHJldHVyblxuXG4gIC8vIFJlc29sdmUgdGhlIHByb21pc2UgdGhhdCBhbGwgcmVxdWVzdHMgYXJlIGRvbmUuXG4gIHBlbmRpbmcucmVzb2x2ZShjYW1lbGl6ZShwZW5kaW5nLm1lbWJlcnMpKVxuXG4gIC8vIERlbGV0ZSB0aGUgY2FjaGUgdG8gY2xlYW4gdXAgb25jZSBpdHMgZG9uZS5cbiAgYm90LmdhdGV3YXkuY2FjaGUucmVxdWVzdE1lbWJlcnMucGVuZGluZy5kZWxldGUocGF5bG9hZC5ub25jZSlcbn1cbiJdLCJuYW1lcyI6WyJjYW1lbGl6ZSIsImhhbmRsZUd1aWxkTWVtYmVyc0NodW5rIiwiYm90IiwiZGF0YSIsInBheWxvYWQiLCJkIiwiZ2F0ZXdheSIsImNhY2hlIiwicmVxdWVzdE1lbWJlcnMiLCJlbmFibGVkIiwibm9uY2UiLCJwZW5kaW5nIiwiZ2V0IiwiY2h1bmtfY291bnQiLCJtZW1iZXJzIiwicHVzaCIsImNodW5rX2luZGV4IiwicmVzb2x2ZSIsImRlbGV0ZSJdLCJtYXBwaW5ncyI6IkFBQ0EsU0FBU0EsUUFBUSxRQUFRLG9CQUFtQjtBQUc1QyxPQUFPLGVBQWVDLHdCQUF3QkMsR0FBUSxFQUFFQyxJQUEyQjtJQUNqRixNQUFNQyxVQUFVRCxLQUFLRSxDQUFDO0lBRXRCLG1DQUFtQztJQUNuQyxJQUFJLENBQUNILElBQUlJLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRTtJQUUvQyw2Q0FBNkM7SUFDN0MsSUFBSSxDQUFDTCxRQUFRTSxLQUFLLEVBQUU7SUFFcEIsTUFBTUMsVUFBVVQsSUFBSUksT0FBTyxDQUFDQyxLQUFLLENBQUNDLGNBQWMsQ0FBQ0csT0FBTyxDQUFDQyxHQUFHLENBQUNSLFFBQVFNLEtBQUs7SUFFMUUsSUFBSSxDQUFDQyxTQUFTO0lBRWQsSUFBSVAsUUFBUVMsV0FBVyxLQUFLLEdBQUdGLFFBQVFHLE9BQU8sR0FBR1YsUUFBUVUsT0FBTztTQUMzREgsUUFBUUcsT0FBTyxDQUFDQyxJQUFJLElBQUlYLFFBQVFVLE9BQU87SUFFNUMsc0RBQXNEO0lBQ3RELElBQUlWLFFBQVFZLFdBQVcsR0FBRyxJQUFJWixRQUFRUyxXQUFXLEVBQUU7SUFFbkQsa0RBQWtEO0lBQ2xERixRQUFRTSxPQUFPLENBQUNqQixTQUFTVyxRQUFRRyxPQUFPO0lBRXhDLDhDQUE4QztJQUM5Q1osSUFBSUksT0FBTyxDQUFDQyxLQUFLLENBQUNDLGNBQWMsQ0FBQ0csT0FBTyxDQUFDTyxNQUFNLENBQUNkLFFBQVFNLEtBQUs7QUFDL0QifQ==