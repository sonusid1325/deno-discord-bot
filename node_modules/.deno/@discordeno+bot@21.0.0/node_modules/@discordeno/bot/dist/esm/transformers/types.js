/** https://discord.com/developers/docs/resources/soundboard#soundboard-sound-object-soundboard-sound-structure */ export { };

//# sourceMappingURL=data:application/json;base64,{"version":3,"sources":["../../../src/transformers/types.ts"],"sourcesContent":["import type {\n  ActivityTypes,\n  ApplicationCommandOptionTypes,\n  ApplicationCommandPermissionTypes,\n  ApplicationCommandTypes,\n  ApplicationFlags,\n  AttachmentFlags,\n  AuditLogEvents,\n  AutoModerationActionType,\n  AutoModerationEventTypes,\n  AutoModerationTriggerTypes,\n  BigString,\n  ButtonStyles,\n  ChannelTypes,\n  DefaultMessageNotificationLevels,\n  DiscordActivityInstanceResource,\n  DiscordActivityLocationKind,\n  DiscordApplicationEventWebhookStatus,\n  DiscordApplicationIntegrationType,\n  DiscordAuditLogChange,\n  DiscordAutoModerationRuleTriggerMetadataPresets,\n  DiscordEntitlementType,\n  DiscordGuildOnboardingMode,\n  DiscordGuildOnboardingPromptType,\n  DiscordInteractionContextType,\n  DiscordInviteType,\n  DiscordPollLayoutType,\n  DiscordScheduledEventRecurrenceRuleFrequency,\n  DiscordScheduledEventRecurrenceRuleMonth,\n  DiscordScheduledEventRecurrenceRuleNWeekday,\n  DiscordScheduledEventRecurrenceRuleWeekday,\n  DiscordSkuType,\n  DiscordSubscriptionStatus,\n  DiscordTeamMemberRole,\n  DiscordTemplateSerializedSourceGuild,\n  DiscordWebhookEventType,\n  EmbedTypes,\n  ExplicitContentFilterLevels,\n  ForumLayout,\n  GuildNsfwLevel,\n  IntegrationExpireBehaviors,\n  InteractionCallbackData,\n  InteractionCallbackOptions,\n  InteractionResponseTypes,\n  InteractionTypes,\n  Locales,\n  Localization,\n  MessageActivityTypes,\n  MessageComponentTypes,\n  MessageTypes,\n  MfaLevels,\n  OAuth2Scope,\n  OverwriteReadable,\n  PremiumTiers,\n  PremiumTypes,\n  PresenceStatus,\n  RoleFlags,\n  ScheduledEventEntityType,\n  ScheduledEventPrivacyLevel,\n  ScheduledEventStatus,\n  SelectOption,\n  SkuFlags,\n  SortOrderTypes,\n  StickerFormatTypes,\n  StickerTypes,\n  SystemChannelFlags,\n  TeamMembershipStates,\n  TextStyles,\n  VerificationLevels,\n  VideoQualityModes,\n  WebhookTypes,\n} from '@discordeno/types'\nimport type { Collection } from '@discordeno/utils'\nimport type {\n  Bot,\n  ChannelToggles,\n  EmojiToggles,\n  GuildFeatureKeys,\n  GuildToggles,\n  InteractionResolvedChannel,\n  InteractionResolvedMember,\n  MemberToggles,\n  Permissions,\n  RoleToggles,\n  ToggleBitfield,\n  UserToggles,\n  VoiceStateToggles,\n} from '../index.js'\n\nexport interface Activity {\n  join?: string\n  flags?: number\n  applicationId?: bigint\n  spectate?: string\n  url?: string\n  startedAt?: number\n  endedAt?: number\n  details?: string\n  state?: string\n  emoji?: ActivityEmoji\n  partyId?: string\n  partyCurrentSize?: number\n  partyMaxSize?: number\n  largeImage?: string\n  largeText?: string\n  smallImage?: string\n  smallText?: string\n  match?: string\n  instance?: boolean\n  buttons?: ActivityButton[]\n  name: string\n  type: ActivityTypes\n  createdAt: number\n}\n\nexport interface ActivityEmoji {\n  id?: bigint\n  animated?: boolean\n  name: string\n}\n\nexport interface ActivityButton {\n  url: string\n  label: string\n}\n\nexport interface ActivityInstance {\n  /** Application ID */\n  applicationId: bigint\n  /** Activity Instance ID */\n  instanceId: string\n  /** Unique identifier for the launch */\n  launchId: bigint\n  /** The Location the instance is runnning in */\n  location: ActivityLocation\n  /** The IDs of the Users currently connected to the instance */\n  users: bigint[]\n}\n\nexport interface ActivityLocation {\n  /** The unique identifier for the location */\n  id: string\n  /** Enum describing kind of location */\n  kind: DiscordActivityLocationKind\n  /** The id of the Channel */\n  channelId: bigint\n  /** The id of the Guild */\n  guildId?: bigint\n}\n\nexport interface Application {\n  flags?: ApplicationFlags\n  icon?: bigint\n  rpcOrigins?: string[]\n  termsOfServiceUrl?: string\n  privacyPolicyUrl?: string\n  primarySkuId?: string\n  slug?: string\n  coverImage?: bigint\n  owner?: User\n  team?: Team\n  guildId?: bigint\n  guild?: Guild\n  id: bigint\n  name: string\n  description: string\n  botPublic: boolean\n  botRequireCodeGrant: boolean\n  verifyKey: string\n  customInstallUrl?: string\n  approximateGuildCount?: number\n  approximateUserInstallCount?: number\n  installParams?: ApplicationInstallParams\n  bot?: User\n  redirectUris?: string[]\n  interactionsEndpointUrl?: string\n  integrationTypesConfig?: Partial<Record<DiscordApplicationIntegrationType, ApplicationIntegrationTypeConfiguration>>\n  roleConnectionsVerificationUrl: string\n  tags: string[]\n  eventWebhooksUrl?: string\n  eventWebhooksStatus: DiscordApplicationEventWebhookStatus\n  eventWebhooksTypes?: DiscordWebhookEventType[]\n}\n\nexport interface ApplicationIntegrationTypeConfiguration {\n  /** Install params for each installation context's default in-app authorization link */\n  oauth2InstallParams?: ApplicationInstallParams\n}\n\nexport interface ApplicationInstallParams {\n  /** Scopes to add the application to the server with */\n  scopes: OAuth2Scope[]\n  /** Permissions to request for the bot role */\n  permissions: bigint\n}\n\nexport interface ApplicationCommand {\n  options?: ApplicationCommandOption[]\n  description?: string\n  guildId?: bigint\n  nameLocalizations?: Record<Locales, string>\n  descriptionLocalizations?: Record<Locales, string>\n  defaultMemberPermissions?: bigint\n  type?: ApplicationCommandTypes\n  version?: string\n  id: bigint\n  name: string\n  applicationId: bigint\n  dmPermission: boolean\n}\n\nexport interface ApplicationCommandOption {\n  /** Value of Application Command Option Type */\n  type: ApplicationCommandOptionTypes\n  /** 1-32 character name matching lowercase `^[\\w-]{1,32}$` */\n  name: string\n  /** Localization object for the `name` field. Values follow the same restrictions as `name` */\n  nameLocalizations?: Localization\n  /** 1-100 character description */\n  description: string\n  /** Localization object for the `description` field. Values follow the same restrictions as `description` */\n  descriptionLocalizations?: Localization\n  /** If the parameter is required or optional--default `false` */\n  required?: boolean\n  /** Choices for `string` and `int` types for the user to pick from */\n  choices?: ApplicationCommandOptionChoice[]\n  /** If the option is a subcommand or subcommand group type, this nested options will be the parameters */\n  options?: ApplicationCommandOption[]\n  /** If the option is a channel type, the channels shown will be restricted to these types */\n  channelTypes?: ChannelTypes[]\n  /** Minimum number desired. */\n  minValue?: number\n  /** Maximum number desired. */\n  maxValue?: number\n  /** Minimum length desired. */\n  minLength?: number\n  /** Maximum length desired. */\n  maxLength?: number\n  /** if autocomplete interactions are enabled for this `String`, `Integer`, or `Number` type option */\n  autocomplete?: boolean\n}\n\nexport interface ApplicationCommandOptionChoice {\n  nameLocalizations?: Record<Locales, string>\n  name: string\n  value: string | number\n}\n\nexport interface GuildApplicationCommandPermissions {\n  id: bigint\n  guildId: bigint\n  applicationId: bigint\n  permissions: ApplicationCommandPermissions[]\n}\n\nexport interface ApplicationCommandPermissions {\n  /** The id of the role or user */\n  id: bigint\n  /** Role or User */\n  type: ApplicationCommandPermissionTypes\n  /** `true` to allow, `false`, to disallow */\n  permission: boolean\n}\n\nexport interface Attachment {\n  /** Name of file attached */\n  filename: string\n  /** The title of the file */\n  title?: string\n  /** The attachment's [media type](https://en.wikipedia.org/wiki/Media_type) */\n  contentType?: string\n  /** Size of file in bytes */\n  size: number\n  /** Source url of file */\n  url: string\n  /** A proxied url of file */\n  proxyUrl: string\n  /** Attachment id */\n  id: bigint\n  /** description for the file (max 1024 characters) */\n  description?: string\n  /** Height of file (if image) */\n  height?: number\n  /** Width of file (if image) */\n  width?: number\n  /** whether this attachment is ephemeral. Ephemeral attachments will automatically be removed after a set period of time. Ephemeral attachments on messages are guaranteed to be available as long as the message itself exists. */\n  ephemeral?: boolean\n  /** The duration of the audio file for a voice message */\n  duration_secs?: number\n  /** A base64 encoded bytearray representing a sampled waveform for a voice message */\n  waveform?: string\n  /** Attachment flags combined as a bitfield */\n  flags?: AttachmentFlags\n}\n\nexport interface AuditLogEntry {\n  id: bigint\n  userId?: bigint\n  reason?: string\n  changes?: DiscordAuditLogChange[]\n  targetId?: bigint\n  actionType: AuditLogEvents\n  options?: OptionalAuditEntryInfo\n}\n\nexport interface OptionalAuditEntryInfo {\n  applicationId?: bigint\n  autoModerationRuleName?: string\n  autoModerationRuleTriggerType?: string\n  channelId?: bigint\n  count?: number\n  deleteMemberDays?: number\n  id?: bigint\n  membersRemoved?: number\n  messageId?: bigint\n  roleName?: string\n  type?: number\n  integrationType?: string\n}\n\nexport interface AutoModerationActionExecution {\n  channelId?: bigint\n  messageId?: bigint\n  alertSystemMessageId?: bigint\n  guildId: bigint\n  userId: bigint\n  content: string\n  action: AutoModerationAction\n  ruleTriggerType: AutoModerationTriggerTypes\n  ruleId: bigint\n  matchedKeyword: string\n  matchedContent: string\n}\n\nexport interface AutoModerationAction {\n  type: AutoModerationActionType\n  metadata: AutoModerationActionMetadata\n}\n\nexport interface AutoModerationActionMetadata {\n  customMessage?: string\n  durationSeconds?: number\n  channelId?: bigint\n}\n\nexport interface AutoModerationRule {\n  triggerMetadata?: AutoModerationRuleTriggerMetadata\n  id: bigint\n  name: string\n  guildId: bigint\n  eventType: AutoModerationEventTypes\n  triggerType: AutoModerationTriggerTypes\n  enabled: boolean\n  creatorId: bigint\n  exemptRoles: bigint[]\n  exemptChannels: bigint[]\n  actions: AutoModerationAction[]\n}\n\nexport interface AutoModerationRuleTriggerMetadata {\n  keywordFilter?: string[]\n  presets?: DiscordAutoModerationRuleTriggerMetadataPresets[]\n  allowList?: string[]\n  mentionTotalLimit?: number\n  regexPatterns: string[]\n}\n\nexport interface AvatarDecorationData {\n  /** the avatar decoration hash */\n  asset: bigint\n  /** id of the avatar decoration's SKU */\n  skuId: bigint\n}\n\nexport interface Channel {\n  /** The id of the channel */\n  id: bigint\n  /** The compressed form of all the boolean values on this channel. */\n  toggles: ChannelToggles\n  /** The type of channel */\n  type: ChannelTypes\n  /** The id of the guild */\n  guildId?: bigint\n  /** Sorting position of the channel */\n  position?: number\n  /** The name of the channel (1-100 characters) */\n  name?: string\n  /** The channel topic (0-4096 characters for GUILD_FORUM channels, 0-1024 characters for all others) */\n  topic?: string\n  /** The id of the last message sent in this channel (may not point to an existing or valid message) */\n  lastMessageId?: bigint\n  /** The bitrate (in bits) of the voice or stage channel */\n  bitrate?: number\n  /** The user limit of the voice or stage channel */\n  userLimit?: number\n  /** Amount of seconds a user has to wait before sending another message (0-21600); bots, as well as users with the permission `manage_messages` or `manage_channel`, are unaffected */\n  rateLimitPerUser?: number\n  /** Id of the creator of the thread */\n  ownerId?: bigint\n  /** For guild channels: Id of the parent category for a channel (each parent category can contain up to 50 channels), for threads: id of the text channel this thread was created */\n  parentId?: bigint\n  /** When the last pinned message was pinned. This may be null in events such as GUILD_CREATE when a message is not pinned. */\n  lastPinTimestamp?: number\n  /** Voice region id for the voice or stage channel, automatic when set to null */\n  rtcRegion?: string\n  /** The camera video quality mode of the voice channel, 1 when not present */\n  videoQualityMode?: VideoQualityModes\n  /** An approximate count of messages in a thread, stops counting at 50 */\n  messageCount?: number\n  /** An approximate count of users in a thread, stops counting at 50 */\n  memberCount?: number\n  /**\n   * Thread-specific fields not needed by other channels.\n   *\n   * @internal\n   * This field is an internal field, subject to breaking changes.\n   */\n  internalThreadMetadata?: InternalChannelThreadMetadata\n  member?: ThreadMember\n  /** Default duration for newly created threads, in minutes, to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080 */\n  defaultAutoArchiveDuration?: number\n  /** computed permissions for the invoking user in the channel, including overwrites, only included when part of the resolved data received on a slash command interaction. This does not include implicit permissions, which may need to be checked separately. */\n  permissions?: Permissions\n  /** The flags of the channel */\n  flags?: number\n  /**\n   * Explicit permission overwrites for members and roles\n   *\n   * @internal\n   * Use channel.permissionOverwrites. This is for internal use only, and prone to breaking changes.\n   */\n  internalOverwrites?: bigint[]\n  /** The recipients of a group dm */\n  recipients?: User[]\n  /** Icon hash of the group dm */\n  icon?: bigint\n  /** Application id of the group DM creator if it is bot-created */\n  applicationId?: bigint\n  /** Number of messages ever sent in a thread, it's similar to `message_count` on message creation, but will not decrement the number when a message is deleted */\n  totalMessageSent?: number\n  /** The set of tags that can be used in a `GUILD_FORUM` or a `GUILD_MEDIA` channel */\n  availableTags?: ForumTag[]\n  /** The IDs of the set of tags that have been applied to a thread in a `GUILD_FORUM` or a `GUILD_MEDIA` channel */\n  appliedTags?: bigint[]\n  /** The emoji to show in the add reaction button on a thread in a `GUILD_FORUM` or a `GUILD_MEDIA` channel */\n  defaultReactionEmoji?: DefaultReactionEmoji\n  /** the initial `rateLimitPerUser` to set on newly created threads in a channel. this field is copied to the thread at creation time and does not live update. */\n  defaultThreadRateLimitPerUser?: number\n  /** The default sort order type used to order posts in `GUILD_FORUM` and `GUILD_MEDIA` channels. Defaults to null, which indicates a preferred sort order hasn't been set by a channel admin */\n  defaultSortOrder?: SortOrderTypes | null\n  defaultForumLayout?: ForumLayout\n  /** Whether the channel is nsfw */\n  nsfw: boolean\n  /** Thread-specific fields not needed by other channels */\n  threadMetadata?: ChannelThreadMetadata\n  /** When a thread is created this will be true on that channel payload for the thread. */\n  newlyCreated: boolean\n  /** When a thread is locked, only users with `MANAGE_THREADS` can unarchive it */\n  locked: boolean\n  /** whether non-moderators can add other non-moderators to a thread; only available on private threads */\n  invitable: boolean\n  /** Whether the thread is archived */\n  archived: boolean\n  /** for group DM channels: whether the channel is managed by an application via the `gdm.join` OAuth2 scope */\n  managed: boolean\n  /** Explicit permission overwrites for members and roles. */\n  permissionOverwrites: OverwriteReadable[]\n}\n\nexport interface ForumTag {\n  /** The id of the tag */\n  id: bigint\n  /** The name of the tag (0-20 characters) */\n  name: string\n  /** Whether this tag can only be added to or removed from threads by a member with the MANAGE_THREADS permission */\n  moderated: boolean\n  /** The id of a guild's custom emoji At most one of emoji_id and emoji_name may be set. */\n  emojiId: bigint\n  /** The unicode character of the emoji */\n  emojiName: string | null\n}\n\n/**\n * @internal\n * This is for internal purposes only, and subject to breaking changes\n */\nexport interface InternalChannelThreadMetadata {\n  /** Timestamp when the thread's archive status was last changed, used for calculating recent activity */\n  archiveTimestamp: number\n  /** Timestamp when the thread was created; only populated for threads created after 2022-01-09 */\n  createTimestamp?: number\n  /** Duration in minutes to automatically archive the thread after recent activity */\n  autoArchiveDuration: 60 | 1440 | 4320 | 10080\n}\n\nexport interface ChannelThreadMetadata {\n  /** Timestamp when the thread's archive status was last changed, used for calculating recent activity */\n  archiveTimestamp?: number\n  /** Timestamp when the thread was created; only populated for threads created after 2022-01-09 */\n  createTimestamp?: number\n  /** Duration in minutes to automatically archive the thread after recent activity */\n  autoArchiveDuration?: 60 | 1440 | 4320 | 10080\n  /** When a thread is locked, only users with `MANAGE_THREADS` can unarchive it */\n  locked: boolean\n  /** whether non-moderators can add other non-moderators to a thread; only available on private threads */\n  invitable: boolean\n  /** Whether the thread is archived */\n  archived: boolean\n}\n\nexport interface Component {\n  /** component type */\n  type: MessageComponentTypes\n  /** a developer-defined identifier for the component, max 100 characters */\n  customId?: string\n  /** whether this component is required to be filled, default true */\n  required?: boolean\n  /** whether the component is disabled, default false */\n  disabled?: boolean\n  /** For different styles/colors of the buttons */\n  style?: ButtonStyles | TextStyles\n  /** text that appears on the button (max 80 characters) */\n  label?: string\n  /** the dev-define value of the option, max 100 characters for select or 4000 for input. */\n  value?: string\n  /** Emoji object that includes fields of name, id, and animated supporting unicode and custom emojis. */\n  emoji?: Pick<Partial<Emoji>, 'id' | 'name' | 'animated'>\n  /** optional url for link-style buttons that can navigate a user to the web. Only type 5 Link buttons can have a url */\n  url?: string\n  /** List of channel types to include in a channel select menu options list */\n  channelTypes?: ChannelTypes[]\n  /** The choices! Maximum of 25 items. */\n  options?: SelectOption[]\n  /** A custom placeholder text if nothing is selected. Maximum 150 characters. */\n  placeholder?: string\n  /** The minimum number of items that must be selected. Default 1. Between 1-25. */\n  minValues?: number\n  /** The maximum number of items that can be selected. Default 1. Between 1-25. */\n  maxValues?: number\n  /** The minimum input length for a text input. Between 0-4000. */\n  minLength?: number\n  /** The maximum input length for a text input. Between 1-4000. */\n  maxLength?: number\n  /** a list of child components */\n  components?: Component[]\n  /** List of default values for auto-populated select menu components; number of default values must be in the range defined by min_values and max_values */\n  defaultValues?: DiscordComponentDefaultValue[]\n  /** Identifier for a purchasable SKU, only available when using premium-style buttons */\n  skuId?: bigint\n}\n\nexport interface DiscordComponentDefaultValue {\n  /** ID of a user, role, or channel */\n  id: bigint\n  /** Type of value that id represents. */\n  type: 'user' | 'role' | 'channel'\n}\n\nexport interface Embed {\n  description?: string\n  type?: EmbedTypes\n  url?: string\n  image?: EmbedImage\n  video?: EmbedVideo\n  title?: string\n  timestamp?: number\n  color?: number\n  footer?: EmbedFooter\n  thumbnail?: EmbedThumbnail\n  provider?: EmbedProvider\n  author?: EmbedAuthor\n  fields?: EmbedField[]\n}\n\nexport interface EmbedImage {\n  proxyUrl?: string\n  height?: number\n  width?: number\n  url: string\n}\n\nexport interface EmbedVideo {\n  url?: string\n  proxyUrl?: string\n  height?: number\n  width?: number\n}\n\nexport interface EmbedFooter {\n  iconUrl?: string\n  proxyIconUrl?: string\n  text: string\n}\n\nexport interface EmbedThumbnail {\n  proxyUrl?: string\n  height?: number\n  width?: number\n  url: string\n}\n\nexport interface EmbedProvider {\n  name?: string\n  url?: string\n}\n\nexport interface EmbedAuthor {\n  url?: string\n  iconUrl?: string\n  proxyIconUrl?: string\n  name: string\n}\n\nexport interface EmbedField {\n  inline?: boolean\n  name: string\n  value: string\n}\n\nexport interface Emoji {\n  /** Emoji name (can only be null in reaction emoji objects) */\n  name?: string\n  /** Emoji id */\n  id?: bigint\n  /** Roles allowed to use this emoji */\n  roles?: bigint[]\n  /** User that created this emoji */\n  user?: User\n  /** Whether this emoji must be wrapped in colons */\n  requireColons?: boolean\n  /** Whether this emoji is managed */\n  managed?: boolean\n  /** Whether this emoji is animated */\n  animated?: boolean\n  /** Whether this emoji can be used, may be false due to loss of Server Boosts */\n  available?: boolean\n  toggles: EmojiToggles\n}\n\nexport interface DefaultReactionEmoji {\n  /** The id of a guild's custom emoji */\n  emojiId: bigint\n  /** The unicode character of the emoji */\n  emojiName?: string\n}\n\nexport interface Entitlement {\n  /** ID of the entitlement */\n  id: bigint\n  /** ID of the SKU */\n  skuId: bigint\n  /** ID of the user that is granted access to the entitlement's sku */\n  userId?: bigint\n  /** ID of the guild that is granted access to the entitlement's sku */\n  guildId?: bigint\n  /** ID of the parent application */\n  applicationId: bigint\n  /** Type of entitlement */\n  type: DiscordEntitlementType\n  /** Entitlement was deleted */\n  deleted: boolean\n  /** Start date at which the entitlement is valid. */\n  startsAt?: number\n  /** Date at which the entitlement is no longer valid. */\n  endsAt?: number\n  /** For consumable items, whether or not the entitlement has been consumed */\n  consumed?: boolean\n}\n\nexport interface GetGatewayBot {\n  url: string\n  shards: number\n  sessionStartLimit: SessionStartLimit\n}\n\nexport interface SessionStartLimit {\n  total: number\n  remaining: number\n  resetAfter: number\n  maxConcurrency: number\n}\n\nexport interface Guild {\n  /** Guild name (2-100 characters, excluding trailing and leading whitespace) */\n  name: string\n  /** True if the user is the owner of the guild */\n  owner?: boolean\n  /** Afk timeout in seconds */\n  afkTimeout: number\n  /** True if the server widget is enabled */\n  widgetEnabled?: boolean\n  /** Verification level required for the guild */\n  verificationLevel: VerificationLevels\n  /** Default message notifications level */\n  defaultMessageNotifications: DefaultMessageNotificationLevels\n  /** Explicit content filter level */\n  explicitContentFilter: ExplicitContentFilterLevels\n  /** Enabled guild features */\n  features: GuildFeatureKeys[]\n  /** Required MFA level for the guild */\n  mfaLevel: MfaLevels\n  /** System channel flags */\n  systemChannelFlags: SystemChannelFlags\n  /** True if this is considered a large guild */\n  large?: boolean\n  /** True if this guild is unavailable due to an outage */\n  unavailable?: boolean\n  /** Total number of members in this guild */\n  memberCount: number\n  /** The maximum number of presences for the guild (the default value, currently 25000, is in effect when null is returned) */\n  maxPresences?: number\n  /** The maximum number of members for the guild */\n  maxMembers?: number\n  /** The vanity url code for the guild */\n  vanityUrlCode?: string\n  /** The description of a guild */\n  description?: string\n  toggles: GuildToggles\n  shardId: number\n  /** Premium tier (Server Boost level) */\n  premiumTier: PremiumTiers\n  /** The number of boosts this guild currently has */\n  premiumSubscriptionCount?: number\n  /** The maximum amount of users in a video channel */\n  maxVideoChannelUsers?: number\n  /** Maximum amount of users in a stage video channel */\n  maxStageVideoChannelUsers?: number\n  /** Approximate number of members in this guild, returned from the GET /guilds/id endpoint when with_counts is true */\n  approximateMemberCount?: number\n  /** Approximate number of non-offline members in this guild, returned from the GET /guilds/id endpoint when with_counts is true */\n  approximatePresenceCount?: number\n  /** Guild NSFW level */\n  nsfwLevel: GuildNsfwLevel\n  /** Whether the guild has the boost progress bar enabled */\n  premiumProgressBarEnabled: boolean\n  /** Guild id */\n  id: bigint\n  /** Icon hash */\n  icon?: bigint\n  /** Icon hash, returned when in the template object */\n  iconHash?: bigint\n  /** Splash hash */\n  splash?: bigint\n  /** Discovery splash hash; only present for guilds with the \"DISCOVERABLE\" feature */\n  discoverySplash?: bigint\n  /** Id of the owner */\n  ownerId: bigint\n  /** Total permissions for the user in the guild (excludes overwrites and implicit permissions) */\n  permissions: bigint\n  /** Id of afk channel */\n  afkChannelId?: bigint\n  /** The channel id that the widget will generate an invite to, or null if set to no invite */\n  widgetChannelId?: bigint\n  /** Roles in the guild */\n  roles: Collection<bigint, Role>\n  /** Custom guild emojis */\n  emojis: Collection<bigint, Emoji>\n  /** Application id of the guild creator if it is bot-created */\n  applicationId?: bigint\n  /** The id of the channel where guild notices such as welcome messages and boost events are posted */\n  systemChannelId?: bigint\n  /** The id of the channel where community guilds can display rules and/or guidelines */\n  rulesChannelId?: bigint\n  /** When this guild was joined at */\n  joinedAt?: number\n  /** States of members currently in voice channels; lacks the guild_id key */\n  voiceStates: Collection<bigint, VoiceState>\n  /** Users in the guild */\n  members: Collection<bigint, Member>\n  /** Channels in the guild */\n  channels: Collection<bigint, Channel>\n  /** All active threads in the guild that the current user has permission to view */\n  threads: Collection<bigint, Channel>\n  /** Presences of the members in the guild, will only include non-offline members if the size is greater than large threshold */\n  presences?: PresenceUpdate[]\n  /** Banner hash */\n  banner?: bigint\n  /** The preferred locale of a Community guild; used in server discovery and notices from Discord; defaults to \"en-US\" */\n  preferredLocale: string\n  /** The id of the channel where admins and moderators of Community guilds receive notices from Discord */\n  publicUpdatesChannelId?: bigint\n  /** The welcome screen of a Community guild, shown to new members, returned in an Invite's guild object */\n  welcomeScreen?: WelcomeScreen\n  /** Stage instances in the guild */\n  stageInstances?: StageInstance[]\n  /** Custom guild stickers */\n  stickers?: Collection<bigint, Sticker>\n  /** The id of the channel where admins and moderators of Community guilds receive safety alerts from Discord */\n  safetyAlertsChannelId?: bigint\n}\n\nexport interface Integration {\n  user?: User\n  enabled?: boolean\n  syncing?: boolean\n  roleId?: bigint\n  enableEmoticons?: boolean\n  expireBehavior?: IntegrationExpireBehaviors\n  expireGracePeriod?: number\n  syncedAt?: number\n  subscriberCount?: number\n  revoked?: boolean\n  application?: IntegrationApplication\n  id: bigint\n  name: string\n  guildId: bigint\n  type: 'twitch' | 'youtube' | 'discord'\n  account: IntegrationAccount\n  scopes: OAuth2Scope[]\n}\n\nexport interface IntegrationApplication {\n  bot?: User\n  icon?: bigint\n  id: bigint\n  name: string\n  description: string\n}\n\nexport interface IntegrationAccount {\n  id: bigint\n  name: string\n}\n\nexport interface Interaction {\n  /** The bot object */\n  bot: Bot\n  /** Whether or not this interaction has been responded to. */\n  acknowledged: boolean\n  /** Id of the interaction */\n  id: bigint\n  /** Id of the application this interaction is for */\n  applicationId: bigint\n  /** The type of interaction */\n  type: InteractionTypes\n  /** Guild that the interaction was sent from */\n  guild: Guild\n  /** The guild it was sent from */\n  guildId?: bigint\n  /** The channel it was sent from */\n  channel: Partial<Channel>\n  /**\n   * The ID of channel it was sent from\n   *\n   * @remarks\n   * It is recommended that you begin using this channel field to identify the source channel of the interaction as they may deprecate the existing channel_id field in the future.\n   */\n  channelId?: bigint\n  /** Guild member data for the invoking user, including permissions */\n  member?: Member\n  /** User object for the invoking user, if invoked in a DM */\n  user: User\n  /** A continuation token for responding to the interaction */\n  token: string\n  /** Read-only property, always `1` */\n  version: 1\n  /** For the message the button was attached to */\n  message?: Message\n  /** the command data payload */\n  data?: InteractionData\n  locale?: string\n  /** The guild's preferred locale, if invoked in a guild */\n  guildLocale?: string\n  /** The computed permissions for a bot or app in the context of a specific interaction (including channel overwrites) */\n  appPermissions: bigint\n  /** Mapping of installation contexts that the interaction was authorized for to related user or guild IDs. */\n  authorizingIntegrationOwners: Partial<Record<DiscordApplicationIntegrationType, bigint>>\n  /** Context where the interaction was triggered from */\n  context?: DiscordInteractionContextType\n  /**\n   * Sends a response to an interaction.\n   *\n   * @remarks\n   * This will send a ChannelMessageWithSource, ApplicationCommandAutocompleteResult or Modal response based on the type of the interaction you are responding to.\n   *\n   * If the interaction has been already acknowledged, indicated by {@link Interaction.acknowledged}, it will send a followup message instead.\n   */\n  respond: (\n    response: string | InteractionCallbackData,\n    options?: { isPrivate?: boolean; withResponse?: boolean },\n  ) => Promise<Message | InteractionCallbackResponse | void>\n  /**\n   * Edit the original response of an interaction or a followup if the message id is provided.\n   *\n   * @remarks\n   * This will edit the original interaction response or, if the interaction has not yet been acknowledged and the type of the interaction is MessageComponent it will instead send a UpdateMessage response instead.\n   */\n  edit: (\n    response: string | InteractionCallbackData,\n    messageId?: BigString,\n    options?: InteractionCallbackOptions,\n  ) => Promise<Message | InteractionCallbackResponse | void>\n  /**\n   * Defer the interaction for updating the referenced message at a later time with {@link edit}.\n   *\n   * @remarks\n   * This will send a DeferredUpdateMessage response.\n   */\n  deferEdit: (options?: InteractionCallbackOptions) => Promise<InteractionCallbackResponse | void>\n  /**\n   * Defer the interaction for updating the response at a later time with {@link edit}.\n   *\n   * @remarks\n   * This will send a DeferredChannelMessageWithSource response.\n   */\n  defer: (isPrivate?: boolean, options?: InteractionCallbackOptions) => Promise<InteractionCallbackResponse | void>\n  /** Delete the original interaction response or a followup if the message id is provided. */\n  delete: (messageId?: BigString) => Promise<void>\n}\n\nexport interface InteractionCallbackResponse {\n  /** The interaction object associated with the interaction response */\n  interaction: InteractionCallback\n  /** The resource that was created by the interaction response. */\n  resource?: InteractionResource\n}\n\nexport interface InteractionCallback {\n  id: bigint\n  type: InteractionTypes\n  /** Instance ID of the Activity if one was launched or joined */\n  activityInstanceId?: string\n  /** ID of the message that was created by the interaction */\n  responseMessageId?: bigint\n  /** Whether or not the message is in a loading state */\n  responseMessageLoading?: boolean\n  /** Whether or not the response message was ephemeral */\n  responseMessageEphemeral?: boolean\n}\n\nexport interface InteractionResource {\n  type: InteractionResponseTypes\n  /**\n   * Represents the Activity launched by this interaction.\n   *\n   * @remarks\n   * Only present if type is `LAUNCH_ACTIVITY`.\n   */\n  activityInstance?: DiscordActivityInstanceResource\n  /**\n   * Message created by the interaction.\n   *\n   * @remarks\n   * Only present if type is either `CHANNEL_MESSAGE_WITH_SOURCE` or `UPDATE_MESSAGE`.\n   */\n  message?: Message\n}\n\nexport interface InteractionData {\n  type?: ApplicationCommandTypes\n  componentType?: MessageComponentTypes\n  customId?: string\n  components?: Component[]\n  values?: string[]\n  name: string\n  resolved?: InteractionDataResolved\n  options?: InteractionDataOption[]\n  id?: bigint\n  targetId?: bigint\n}\n\nexport interface InteractionDataResolved {\n  messages?: Collection<bigint, Message>\n  users?: Collection<bigint, User>\n  members?: Collection<bigint, InteractionResolvedMember>\n  roles?: Collection<bigint, Role>\n  channels?: Collection<bigint, InteractionResolvedChannel>\n  attachments?: Collection<bigint, Attachment>\n}\n\nexport interface InteractionDataOption {\n  name: string\n  type: ApplicationCommandOptionTypes\n  value?: string | number | boolean\n  options?: InteractionDataOption[]\n  focused?: boolean\n}\n\nexport interface Invite {\n  /** The type of invite */\n  type: DiscordInviteType\n  /** The channel the invite is for */\n  channelId: bigint\n  /** The unique invite code */\n  code: string\n  /** The time at which the invite was created */\n  createdAt: number\n  /** The guild of the invite */\n  guildId?: bigint\n  /** The user that created the invite */\n  inviter?: User\n  /** How long the invite is valid for (in seconds) */\n  maxAge: number\n  /** The maximum number of times the invite can be used */\n  maxUses: number\n  /** The type of target for this voice channel invite */\n  targetType: number\n  /** The target user for this invite */\n  targetUser: User\n  /** The embedded application to open for this voice channel embedded application invite */\n  targetApplication?: Application\n  /** Whether or not the invite is temporary (invited users will be kicked on disconnect unless they're assigned a role) */\n  temporary: boolean\n  /** How many times the invite has been used (always will be 0) */\n  uses: number\n  /** Approximate count of online members (only present when target_user is set) */\n  approximateMemberCount: number\n  /** Stage instance data if there is a public Stage instance in the Stage channel this invite is for */\n  stageInstance?: InviteStageInstance\n  /** The expiration date of this invite, returned from the GET /invites/code endpoint when with_expiration is true */\n  expiresAt?: number\n  /** guild scheduled event data */\n  guildScheduledEvent?: ScheduledEvent\n  /** Approximate count of online members (only present when target_user is set) */\n  approximatePresenceCount?: number\n}\n\nexport interface Member {\n  /** The user id of the member. */\n  id: bigint\n  /** The compressed form of all the boolean values on this user. */\n  toggles?: MemberToggles\n  /** The guild id where this member is. */\n  guildId: bigint\n  /** The user this guild member represents */\n  user?: User\n  /** This user's guild nickname */\n  nick?: string\n  /** The member's custom avatar for this server. */\n  avatar?: bigint\n  /** The member's custom banner for this server. */\n  banner?: bigint\n  /** Array of role object ids */\n  roles: bigint[]\n  /** When the user joined the guild */\n  joinedAt: number\n  /** When the user started boosting the guild */\n  premiumSince?: number\n  /** The permissions this member has in the guild. Only present on interaction events. */\n  permissions?: Permissions\n  /** when the user's timeout will expire and the user will be able to communicate in the guild again (set null to remove timeout), null or a time in the past if the user is not timed out */\n  communicationDisabledUntil?: number\n  /** data for the member's guild avatar decoration */\n  avatarDecorationData: AvatarDecorationData\n  /** Whether the user is deafened in voice channels */\n  deaf?: boolean\n  /** Whether the user is muted in voice channels */\n  mute?: boolean\n  /** Whether the user has not yet passed the guild's Membership Screening requirements */\n  pending?: boolean\n  /** Member has left and rejoined the guild */\n  didRejoin?: boolean\n  /** Member has completed onboarding */\n  startedOnboarding?: boolean\n  /** Member is exempt from guild verification requirements */\n  bypassesVerification?: boolean\n  /** Member has started onboarding */\n  completedOnboarding?: boolean\n  /** Guild member flags */\n  flags: number\n}\n\nexport interface Message {\n  /** Sent with Rich Presence-related chat embeds */\n  activity?: MessageActivity\n  /** Sent with Rich Presence-related chat embeds */\n  application?: Partial<Application>\n  /** If the message is an Interaction or application-owned webhook, this is the id of the application */\n  applicationId?: bigint\n  /** Any attached files on this message. */\n  attachments?: Attachment[]\n  /** The author of this message (not guaranteed to be a valid user) Note: The author object follows the structure of the user object, but is only a valid user in the case where the message is generated by a user or bot user. If the message is generated by a webhook, the author object corresponds to the webhook's id, username, and avatar. You can tell if a message is generated by a webhook by checking for the webhook_id on the message object. */\n  author: User\n  /** id of the channel the message was sent in */\n  channelId: bigint\n  /** The components related to this message */\n  components: Component[]\n  /** Contents of the message */\n  content: string\n  /** The timestamp in milliseconds when this message was edited last. */\n  editedTimestamp?: number\n  /** Any embedded content */\n  embeds?: Embed[]\n  /** id of the guild the message was sent in Note: For MESSAGE_CREATE and MESSAGE_UPDATE events, the message object may not contain a guild_id or member field since the events are sent directly to the receiving user and the bot who sent the message, rather than being sent through the guild like non-ephemeral messages. */\n  guildId?: bigint\n  /** id of the message */\n  id: bigint\n  /** sent if the message is sent as a result of an interaction */\n  interactionMetadata?: MessageInteractionMetadata\n  /**\n   * Sent if the message is a response to an Interaction\n   *\n   * @deprecated\n   * Deprecated in favor of {@link interactionMetadata}\n   */\n  interaction?: MessageInteraction\n  member?: Member\n  /** Users specifically mentioned in the message Note: The user objects in the mentions array will only have the partial member field present in MESSAGE_CREATE and MESSAGE_UPDATE events from text-based guild channels. */\n  mentions?: User[]\n  /** Channels specifically mentioned in this message Note: Not all channel mentions in a message will appear in mention_channels. Only textual channels that are visible to everyone in a discoverable guild will ever be included. Only crossposted messages (via Channel Following) currently include mention_channels at all. If no mentions in the message meet these requirements, this field will not be sent. */\n  mentionedChannelIds?: bigint[]\n  /** Roles specifically mentioned in this message */\n  mentionedRoleIds?: bigint[]\n  /** Data showing the source of a crossposted channel follow add, pin or reply message */\n  messageReference?: MessageReference\n  /**\n   * The message associated with the `message_reference`\n   * Note: This field is only returned for messages with a `type` of `19` (REPLY). If the message is a reply but the `referenced_message` field is not present, the backend did not attempt to fetch the message that was being replied to, so its state is unknown. If the field exists but is null, the referenced message was deleted.\n   */\n  referencedMessage?: Message\n  /** The message associated with the `message_reference`. This is a minimal subset of fields in a message (e.g. `author` is excluded.)  */\n  messageSnapshots?: MessageSnapshot[]\n  nonce?: string | number\n  /** Reactions on this message. */\n  reactions?: Reaction[]\n  /** Sent if the message contains stickers */\n  stickerItems?: Pick<Sticker, 'id' | 'name' | 'formatType'>[]\n  /** Type of message */\n  type: MessageTypes\n  /** The thread that was started from this message, includes thread member object */\n  thread?: Channel\n  /** If the message is generated by a webhook, this is the webhook's id */\n  webhookId?: bigint\n  /** A poll! */\n  poll?: Poll\n  /** The call associated with the message */\n  call?: MessageCall\n  /** Holds all the boolean values on this message. */\n  bitfield?: ToggleBitfield\n  /** Whether this message has been published to subscribed channels (via Channel Following) */\n  crossposted: boolean\n  /** Whether this message is only visible to the user who invoked the Interaction */\n  ephemeral: boolean\n  /** Whether this message failed to mention some roles and add their members to the thread */\n  failedToMentionSomeRolesInThread: boolean\n  /** Message flags combined as a bitfield */\n  flags?: ToggleBitfield\n  /** Whether this message has an associated thread, with the same id as the message */\n  hasThread: boolean\n  /** Whether this message originated from a message in another channel (via Channel Following) */\n  isCrosspost: boolean\n  /** Whether this message is an Interaction Response and the bot is \"thinking\" */\n  loading: boolean\n  /** The ids of the users who were mentioned in this message. */\n  mentionedUserIds: bigint[]\n  /** Whether this message mentions everyone */\n  mentionEveryone: boolean\n  /** Whether this message is pinned */\n  pinned: boolean\n  /** Whether the source message for this crosspost has been deleted (via Channel Following) */\n  sourceMessageDeleted: boolean\n  /** Whether do not include any embeds when serializing this message */\n  suppressEmbeds: boolean\n  /** Whether this message will not trigger push and desktop notifications */\n  suppressNotifications: boolean\n  /** The timestamp in milliseconds when this message was created */\n  timestamp: number\n  /** Whether this was a TTS message. */\n  tts: boolean\n  /** Whether this message came from the urgent message system */\n  urgent: boolean\n}\n\nexport interface MessageActivity {\n  /** Type of message activity */\n  type: MessageActivityTypes\n  /** party_id from a Rich Presence event */\n  partyId?: string\n}\n\nexport interface MessageInteraction {\n  /** Id of the interaction */\n  id: bigint\n  /** The member who invoked the interaction in the guild */\n  member?: Member\n  /** The name of the ApplicationCommand including the name of the subcommand/subcommand group */\n  name: string\n  /** The type of interaction */\n  type: InteractionTypes\n  /** The user who invoked the interaction */\n  user: User\n}\n\nexport interface MessageReference {\n  /** id of the originating message's channel Note: channel_id is optional when creating a reply, but will always be present when receiving an event/response that includes this data model. */\n  channelId?: bigint\n  /** id of the originating message's guild */\n  guildId?: bigint\n  /** id of the originating message */\n  messageId?: bigint\n}\n\nexport interface MessageSnapshot {\n  /** Minimal subset of fields in the forwarded message */\n  message: Pick<\n    Message,\n    | 'type'\n    | 'content'\n    | 'embeds'\n    | 'attachments'\n    | 'timestamp'\n    | 'editedTimestamp'\n    | 'flags'\n    | 'mentions'\n    | 'mentionedRoleIds'\n    | 'stickerItems'\n    | 'components'\n  >\n}\n\nexport interface MessageInteractionMetadata {\n  /** Id of the interaction */\n  id: bigint\n  /** The type of interaction */\n  type: InteractionTypes\n  /** User who triggered the interaction */\n  user: User\n  /** IDs for installation context(s) related to an interaction */\n  authorizingIntegrationOwners: Partial<Record<DiscordApplicationIntegrationType, bigint>>\n  /** ID of the original response message, present only on follow-up messages */\n  originalResponseMessageId?: bigint\n  /**\n   * The user the command was run on, present only on user command interactions\n   *\n   * @remarks\n   * Only present when the interaction metadata is about an application command\n   */\n  targetUser?: User\n  /**\n   * The ID of the message the command was run on, present only on message command interactions. The original response message will also have message_reference and referenced_message pointing to this message.\n   *\n   * @remarks\n   * Only present when the interaction metadata is about an application command\n   */\n  targetMessageId?: bigint\n  /**\n   * ID of the message that contained interactive component, present only on messages created from component interactions\n   *\n   * @remarks\n   * Only present when the interaction metadata is about a message component\n   */\n  interactedMessageId?: bigint\n  /**\n   * Metadata for the interaction that was used to open the modal, present only on modal submit interactions\n   *\n   * @remarks\n   * Only present when the interaction metadata is about a modal submit\n   */\n  triggeringInteractionMetadata?: MessageInteractionMetadata\n}\n\nexport interface MessageCall {\n  /** Array of user object ids that participated in the call */\n  participants: bigint[]\n  /** Time when call ended */\n  endedTimestamp: number\n}\n\nexport interface Reaction {\n  /** Whether the current user reacted using this emoji */\n  me: boolean\n  /** Whether the current user super-reacted using this emoji */\n  meBurst: boolean\n  /** Times this emoji has been used to react */\n  count: number\n  /** Reaction count details object */\n  countDetails: ReactionCountDetails\n  emoji: Partial<Emoji>\n  /** HEX colors used for super reaction */\n  burstColors: string[]\n}\n\nexport interface ReactionCountDetails {\n  /** Count of super reactions */\n  burst: number\n  /** Count of normal reactions */\n  normal: number\n}\n\nexport interface GuildOnboarding {\n  /** ID of the guild this onboarding is part of */\n  guildId: bigint\n  /** Prompts shown during onboarding and in customize community */\n  prompts: GuildOnboardingPrompt[]\n  /** Channel IDs that members get opted into automatically */\n  defaultChannelIds: bigint[]\n  /** Whether onboarding is enabled in the guild */\n  enabled: boolean\n  /** Current mode of onboarding */\n  mode: DiscordGuildOnboardingMode\n}\n\nexport interface GuildOnboardingPrompt {\n  /** ID of the prompt */\n  id: bigint\n  /** Type of prompt */\n  type: DiscordGuildOnboardingPromptType\n  /** Options available within the prompt */\n  options: GuildOnboardingPromptOption[]\n  /** Title of the prompt */\n  title: string\n  /** Indicates whether users are limited to selecting one option for the prompt */\n  singleSelect: boolean\n  /** Indicates whether the prompt is required before a user completes the onboarding flow */\n  required: boolean\n  /** Indicates whether the prompt is present in the onboarding flow. If `false`, the prompt will only appear in the Channels & Roles tab */\n  inOnboarding: boolean\n}\n\nexport interface GuildOnboardingPromptOption {\n  /** ID of the prompt option */\n  id: bigint\n  /** IDs for channels a member is added to when the option is selected */\n  channelIds: bigint[]\n  /** IDs for roles assigned to a member when the option is selected */\n  roleIds: bigint[]\n  /** Emoji of the option */\n  emoji: Emoji\n  /** Title of the option */\n  title: string\n  /** Description of the option */\n  description?: string\n}\n\nexport interface Poll {\n  /** The question of the poll. Only `text` is supported. */\n  question: PollMedia\n  /** Each of the answers available in the poll. There is a maximum of 10 answers per poll. */\n  answers: PollAnswer[]\n  /**\n   * The time when the poll ends.\n   *\n   * @remarks\n   * `expiry` is marked as nullable to support non-expiring polls in the future, but all polls have an expiry currently.\n   */\n  expiry: number | null\n  /** Whether a user can select multiple answers */\n  allowMultiselect: boolean\n  /** The layout type of the poll */\n  layoutType: DiscordPollLayoutType\n  /**\n   * The results of the poll\n   *\n   * @remarks\n   * This value will not be sent by discord under specific conditions where they don't fetch them on their backend. When this value is missing it should be interpreted as \"Unknown results\" and not as \"No results\"\n   * The results may not be totally accurate while the poll has not ended. When it ends discord will re-calculate all the results and set is_finalized to true\n   */\n  results?: PollResult\n}\n\nexport interface PollMedia {\n  /**\n   * The text of the field\n   *\n   * @remarks\n   * `text` should always be non-null for both questions and answers, but this is subject to changes.\n   * The maximum length of `text` is 300 for the question, and 55 for any answer.\n   */\n  text?: string\n  /**\n   * The emoji of the field\n   *\n   * @remarks\n   * When creating a poll answer with an emoji, one only needs to send either the `id` (custom emoji) or `name` (default emoji) as the only field.\n   */\n  emoji?: Partial<Emoji>\n}\n\nexport interface PollAnswer {\n  /**\n   * The id of the answer\n   *\n   * @remarks\n   * This id labels each answer. It starts at 1 and goes up sequentially. Discord recommend against depending on this sequence as it is an implementation detail.\n   */\n  answerId: number\n  /** The data of the answer */\n  pollMedia: PollMedia\n}\n\nexport interface PollResult {\n  /** Whether the votes have been precisely counted */\n  isFinalized: boolean\n  /** The counts for each answer */\n  answerCounts: PollAnswerCount[]\n}\n\nexport interface PollAnswerCount {\n  /** The {@link PollAnswer.answerId | answerId} */\n  id: number\n  /** The number of votes for this answer */\n  count: number\n  /** Whether the current user voted for this answer */\n  meVoted: boolean\n}\n\nexport interface PresenceUpdate {\n  desktop?: string\n  mobile?: string\n  web?: string\n  user: User\n  guildId: bigint\n  status: PresenceStatus\n  activities: Activity[]\n}\n\nexport interface Role {\n  /** Role id */\n  id: bigint\n  /** The guild id where this role is located. */\n  guildId: bigint\n  /** The compressed version of the boolean values on this role. */\n  toggles?: RoleToggles\n  /** If this role is showed separately in the user listing */\n  hoist: boolean\n  /** Permission bit set */\n  permissions: Permissions\n  /** Whether this role is managed by an integration */\n  managed: boolean\n  /** Whether this role is mentionable */\n  mentionable: boolean\n  /**\n   * Role tags\n   *\n   * @internal\n   * Use role.tags. This is for internal use only, and prone to breaking changes.\n   */\n  internalTags?: InternalRoleTags\n  icon?: bigint\n  /** Role name */\n  name: string\n  /** Integer representation of hexadecimal color code */\n  color: number\n  /** Position of this role */\n  position: number\n  /** role unicode emoji */\n  unicodeEmoji?: string\n  /** Role flags combined as a bitfield */\n  flags: RoleFlags\n  /** The tags this role has */\n  tags?: RoleTags\n  premiumSubscriber: boolean\n  /** Whether this role is available for purchase. */\n  availableForPurchase: boolean\n  /** Whether this is a guild's linked role. */\n  guildConnections: boolean\n}\n\n/**\n * @internal\n * This is for internal purposes only, and subject to breaking changes\n */\nexport interface InternalRoleTags {\n  /** The id of the bot this role belongs to */\n  botId?: bigint\n  /** The id of the integration this role belongs to */\n  integrationId?: bigint\n  /** Id of this role's subscription sku and listing. */\n  subscriptionListingId?: bigint\n}\n\nexport interface RoleTags {\n  /** The id of the bot this role belongs to */\n  botId?: bigint\n  /** The id of the integration this role belongs to */\n  integrationId?: bigint\n  /** Id of this role's subscription sku and listing. */\n  subscriptionListingId?: bigint\n  /** Whether this role is available for purchase. */\n  availableForPurchase?: boolean\n  /** Whether this is a guild's linked role */\n  guildConnections?: boolean\n  /** Whether this is the guild's premium subscriber role */\n  premiumSubscriber?: boolean\n}\n\nexport interface ScheduledEvent {\n  /** the id of the scheduled event */\n  id: bigint\n  /** the guild id which the scheduled event belongs to */\n  guildId: bigint\n  /** the channel id in which the scheduled event will be hosted if specified */\n  channelId?: bigint\n  /** the id of the user that created the scheduled event */\n  creatorId?: bigint\n  /** the name of the scheduled event */\n  name: string\n  /** the description of the scheduled event */\n  description?: string\n  /** the time the scheduled event will start */\n  scheduledStartTime: number\n  /** the time the scheduled event will end if it does end. */\n  scheduledEndTime?: number\n  /** the privacy level of the scheduled event */\n  privacyLevel: ScheduledEventPrivacyLevel\n  /** the status of the scheduled event */\n  status: ScheduledEventStatus\n  /** the type of hosting entity associated with a scheduled event */\n  entityType: ScheduledEventEntityType\n  /** any additional id of the hosting entity associated with event */\n  entityId?: bigint\n  /** the location for the scheduled event */\n  location?: string\n  /** the user that created the scheduled event */\n  creator?: User\n  /** the number of users subscribed to the scheduled event */\n  userCount?: number\n  /** the cover image hash of the scheduled event */\n  image?: bigint\n  /** the definition for how often this event should recur */\n  recurrenceRule?: ScheduledEventRecurrenceRule\n}\n\nexport interface ScheduledEventRecurrenceRule {\n  /** Starting time of the recurrence interval */\n  start: number\n  /** Ending time of the recurrence interval */\n  end: number | null\n  /** How often the event occurs */\n  frequency: DiscordScheduledEventRecurrenceRuleFrequency\n  /** The spacing between the events, defined by `frequency`. For example, `frequency` of `Weekly` and an `interval` of `2` would be \"every-other week\" */\n  interval: number\n  /** Set of specific days within a week for the event to recur on */\n  byWeekday: DiscordScheduledEventRecurrenceRuleWeekday[] | null\n  /** List of specific days within a specific week (1-5) to recur on */\n  byNWeekday: DiscordScheduledEventRecurrenceRuleNWeekday[] | null\n  /** Set of specific months to recur on */\n  byMonth: DiscordScheduledEventRecurrenceRuleMonth[] | null\n  /** Set of specific dates within a month to recur on */\n  byMonthDay: number[] | null\n  /** Set of days within a year to recur on (1-364) */\n  byYearDay: number[] | null\n  /** The total amount of times that the event is allowed to recur before stopping */\n  count: number | null\n}\n\nexport interface Sku {\n  /** ID of SKU */\n  id: bigint\n  /** Type of SKU */\n  type: DiscordSkuType\n  /** ID of the parent application */\n  applicationId: bigint\n  /** Customer-facing name of your premium offering */\n  name: string\n  /** System-generated URL slug based on the SKU's name */\n  slug: string\n  /** SKU flags combined as a bitfield */\n  flags: SkuFlags\n}\n\nexport interface StageInstance {\n  /** The topic of the Stage instance (1-120 characters) */\n  topic: string\n  /** The id of this Stage instance */\n  id: bigint\n  /** The guild id of the associated Stage channel */\n  guildId: bigint\n  /** The id of the associated Stage channel */\n  channelId: bigint\n  /** The id of the scheduled event for this Stage instance */\n  guildScheduledEventId?: bigint\n}\n\nexport interface InviteStageInstance {\n  /** The members speaking in the Stage */\n  members: Partial<Member>[]\n  /** The number of users in the Stage */\n  participantCount: number\n  /** The number of users speaking in the Stage */\n  speakerCount: number\n  /** The topic of the Stage instance (1-120 characters) */\n  topic: string\n}\n\nexport interface Sticker {\n  /** [Id of the sticker](https://discord.com/developers/docs/reference#image-formatting) */\n  id: bigint\n  /** Id of the pack the sticker is from */\n  packId?: bigint\n  /** Name of the sticker */\n  name: string\n  /** Description of the sticker */\n  description: string\n  /** a unicode emoji representing the sticker's expression */\n  tags: string\n  /** [type of sticker](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types) */\n  type: StickerTypes\n  /** [Type of sticker format](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types) */\n  formatType: StickerFormatTypes\n  /** Whether or not the sticker is available */\n  available?: boolean\n  /** Id of the guild that owns this sticker */\n  guildId?: bigint\n  /** The user that uploaded the sticker */\n  user?: User\n  /** A sticker's sort order within a pack */\n  sortValue?: number\n}\n\nexport interface StickerPack {\n  coverStickerId?: bigint\n  bannerAssetId?: bigint\n  id: bigint\n  name: string\n  description: string\n  stickers: Sticker[]\n  skuId: bigint\n}\n\nexport interface Team {\n  icon?: bigint\n  id: bigint\n  name: string\n  ownerUserId: bigint\n  members: TeamMember[]\n}\n\nexport interface TeamMember {\n  membershipState: TeamMembershipStates\n  teamId: bigint\n  user: User\n  role: DiscordTeamMemberRole\n}\n\nexport interface Template {\n  description?: string | null\n  isDirty?: boolean\n  name: string\n  creatorId: bigint\n  createdAt: number\n  code: string\n  usageCount: number\n  creator: User\n  updatedAt: number\n  sourceGuildId: bigint\n  serializedSourceGuild: DiscordTemplateSerializedSourceGuild\n}\n\nexport interface ThreadMember {\n  id?: bigint\n  userId?: bigint\n  flags: number\n  joinTimestamp: number\n}\n\nexport interface ThreadMemberGuildCreate {\n  joinTimestamp: number\n}\n\nexport interface User {\n  /** Compressed version of all the booleans on a user. */\n  toggles?: UserToggles\n  /** The user's username, not unique across the platform */\n  username: string\n  /** The user's display name, if it is set. For bots, this is the application name */\n  globalName?: string\n  /** The user's chosen language option */\n  locale?: string\n  /** The flags on a user's account */\n  flags?: ToggleBitfield\n  /** The type of Nitro subscription on a user's account */\n  premiumType?: PremiumTypes\n  /** The public flags on a user's account */\n  publicFlags?: ToggleBitfield\n  /** the user's banner color encoded as an integer representation of hexadecimal color code */\n  accentColor?: number\n  /** The user's id */\n  id: bigint\n  /** The user's discord-tag */\n  discriminator: string\n  /** The user's avatar hash */\n  avatar?: bigint\n  /** The user's email */\n  email?: string\n  /** the user's banner, or null if unset */\n  banner?: bigint\n  /** data for the user's avatar decoration */\n  avatarDecorationData?: AvatarDecorationData\n  /** The user tag in the form of username#discriminator */\n  tag: string\n  /** Whether the user belongs to an OAuth2 application */\n  bot: boolean\n  /** Whether the user is an Official Discord System user (part of the urgent message system) */\n  system: boolean\n  /** Whether the user has two factor enabled on their account */\n  mfaEnabled: boolean\n  /** Whether the email on this account has been verified */\n  verified: boolean\n}\n\nexport interface VoiceRegion {\n  id: string\n  name: string\n  custom: boolean\n  optimal: boolean\n  deprecated: boolean\n}\n\nexport interface VoiceState {\n  requestToSpeakTimestamp?: number\n  channelId?: bigint\n  guildId: bigint\n  toggles: VoiceStateToggles\n  sessionId: string\n  userId: bigint\n}\n\nexport interface Webhook {\n  /** The type of the webhook */\n  type: WebhookTypes\n  /** The secure token of the webhook (returned for Incoming Webhooks) */\n  token?: string\n  /** The url used for executing the webhook (returned by the webhooks OAuth2 flow) */\n  url?: string\n  /** The id of the webhook */\n  id: bigint\n  /** The guild id this webhook is for */\n  guildId?: bigint\n  /** The channel id this webhook is for */\n  channelId?: bigint\n  /** The user this webhook was created by (not returned when getting a webhook with its token) */\n  user?: User\n  /** The default name of the webhook */\n  name?: string\n  /** The default user avatar hash of the webhook */\n  avatar?: bigint\n  /** The bot/OAuth2 application that created this webhook */\n  applicationId?: bigint\n  /** The guild of the channel that this webhook is following (returned for Channel Follower Webhooks) */\n  sourceGuild?: Partial<Guild>\n  /** The channel that this webhook is following (returned for Channel Follower Webhooks) */\n  sourceChannel?: Partial<Channel>\n}\n\nexport interface WelcomeScreen {\n  description?: string\n  welcomeChannels: WelcomeScreenChannel[]\n}\n\nexport interface WelcomeScreenChannel {\n  channelId: bigint\n  description: string\n  emojiId?: bigint\n  emojiName?: string\n}\n\nexport interface GuildWidget {\n  id: bigint\n  name: string\n  members: Partial<User>[]\n  channels: Partial<Channel>[]\n  instant_invite: string\n  presenceCount: number\n}\n\nexport interface GuildWidgetSettings {\n  channelId?: string\n  enabled: boolean\n}\n\nexport interface Subscription {\n  /** ID of the subscription */\n  id: bigint\n  /** ID of the user who is subscribed */\n  userId: bigint\n  /** List of SKUs subscribed to */\n  skuIds: bigint[]\n  /** List of entitlements granted for this subscription */\n  entitlementIds: bigint[]\n  /** List of SKUs that this user will be subscribed to at renewal */\n  renewalSkuIds?: bigint[]\n  /** Start of the current subscription period */\n  currentPeriodStart: number\n  /** End of the current subscription period */\n  currentPeriodEnd: number\n  /** Current status of the subscription */\n  status: DiscordSubscriptionStatus\n  /** When the subscription was canceled */\n  canceledAt: number\n  /** ISO3166-1 alpha-2 country code of the payment source used to purchase the subscription. Missing unless queried with a private OAuth scope. */\n  country?: string\n}\n\n/** https://discord.com/developers/docs/resources/soundboard#soundboard-sound-object-soundboard-sound-structure */\nexport interface SoundboardSound {\n  /** The name of this sound */\n  name: string\n  /** The id of this sound */\n  soundId: bigint\n  /** The volume of this sound, from 0 to 1 */\n  volume: number\n  /** The id of this sound's custom emoji */\n  emojiId?: bigint\n  /** The unicode character of this sound's standard emoji */\n  emojiName?: string\n  /** The id of the guild this sound is in */\n  guildId?: bigint\n  /** Whether this sound can be used, may be false due to loss of Server Boosts */\n  available: boolean\n  /** The user who created this sound */\n  user?: User\n}\n"],"names":[],"mappings":"AAwvDA,gHAAgH,GAChH,WAiBC"}