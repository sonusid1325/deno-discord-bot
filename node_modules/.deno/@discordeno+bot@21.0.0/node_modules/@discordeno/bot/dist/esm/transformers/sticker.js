export function transformSticker(bot, payload) {
    const props = bot.transformers.desiredProperties.sticker;
    const sticker = {};
    if (props.id && payload.id) sticker.id = bot.transformers.snowflake(payload.id);
    if (props.packId && payload.pack_id) sticker.packId = bot.transformers.snowflake(payload.pack_id);
    if (props.name && payload.name) sticker.name = payload.name;
    if (props.description && payload.description) sticker.description = payload.description;
    if (props.tags && payload.tags) sticker.tags = payload.tags;
    if (props.type && payload.type) sticker.type = payload.type;
    if (props.formatType && payload.format_type) sticker.formatType = payload.format_type;
    if (props.available && payload.available) sticker.available = payload.available;
    if (props.guildId && payload.guild_id) sticker.guildId = bot.transformers.snowflake(payload.guild_id);
    if (props.user && payload.user) sticker.user = bot.transformers.user(bot, payload.user);
    if (props.sortValue && payload.sort_value !== undefined) sticker.sortValue = payload.sort_value;
    return bot.transformers.customizers.sticker(bot, payload, sticker);
}
export function transformStickerPack(bot, payload) {
    const pack = {
        id: bot.transformers.snowflake(payload.id),
        stickers: payload.stickers.map((sticker)=>bot.transformers.sticker(bot, sticker)),
        name: payload.name,
        skuId: bot.transformers.snowflake(payload.sku_id),
        coverStickerId: payload.cover_sticker_id ? bot.transformers.snowflake(payload.cover_sticker_id) : undefined,
        description: payload.description,
        bannerAssetId: payload.banner_asset_id ? bot.transformers.snowflake(payload.banner_asset_id) : undefined
    };
    return bot.transformers.customizers.stickerPack(bot, payload, pack);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90cmFuc2Zvcm1lcnMvc3RpY2tlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IERpc2NvcmRTdGlja2VyLCBEaXNjb3JkU3RpY2tlclBhY2sgfSBmcm9tICdAZGlzY29yZGVuby90eXBlcydcbmltcG9ydCB0eXBlIHsgSW50ZXJuYWxCb3QsIFN0aWNrZXIsIFN0aWNrZXJQYWNrIH0gZnJvbSAnLi4vaW5kZXguanMnXG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1TdGlja2VyKGJvdDogSW50ZXJuYWxCb3QsIHBheWxvYWQ6IERpc2NvcmRTdGlja2VyKTogdHlwZW9mIGJvdC50cmFuc2Zvcm1lcnMuJGluZmVycmVkVHlwZXMuc3RpY2tlciB7XG4gIGNvbnN0IHByb3BzID0gYm90LnRyYW5zZm9ybWVycy5kZXNpcmVkUHJvcGVydGllcy5zdGlja2VyXG4gIGNvbnN0IHN0aWNrZXIgPSB7fSBhcyBTdGlja2VyXG5cbiAgaWYgKHByb3BzLmlkICYmIHBheWxvYWQuaWQpIHN0aWNrZXIuaWQgPSBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLmlkKVxuICBpZiAocHJvcHMucGFja0lkICYmIHBheWxvYWQucGFja19pZCkgc3RpY2tlci5wYWNrSWQgPSBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLnBhY2tfaWQpXG4gIGlmIChwcm9wcy5uYW1lICYmIHBheWxvYWQubmFtZSkgc3RpY2tlci5uYW1lID0gcGF5bG9hZC5uYW1lXG4gIGlmIChwcm9wcy5kZXNjcmlwdGlvbiAmJiBwYXlsb2FkLmRlc2NyaXB0aW9uKSBzdGlja2VyLmRlc2NyaXB0aW9uID0gcGF5bG9hZC5kZXNjcmlwdGlvblxuICBpZiAocHJvcHMudGFncyAmJiBwYXlsb2FkLnRhZ3MpIHN0aWNrZXIudGFncyA9IHBheWxvYWQudGFnc1xuICBpZiAocHJvcHMudHlwZSAmJiBwYXlsb2FkLnR5cGUpIHN0aWNrZXIudHlwZSA9IHBheWxvYWQudHlwZVxuICBpZiAocHJvcHMuZm9ybWF0VHlwZSAmJiBwYXlsb2FkLmZvcm1hdF90eXBlKSBzdGlja2VyLmZvcm1hdFR5cGUgPSBwYXlsb2FkLmZvcm1hdF90eXBlXG4gIGlmIChwcm9wcy5hdmFpbGFibGUgJiYgcGF5bG9hZC5hdmFpbGFibGUpIHN0aWNrZXIuYXZhaWxhYmxlID0gcGF5bG9hZC5hdmFpbGFibGVcbiAgaWYgKHByb3BzLmd1aWxkSWQgJiYgcGF5bG9hZC5ndWlsZF9pZCkgc3RpY2tlci5ndWlsZElkID0gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5ndWlsZF9pZClcbiAgaWYgKHByb3BzLnVzZXIgJiYgcGF5bG9hZC51c2VyKSBzdGlja2VyLnVzZXIgPSBib3QudHJhbnNmb3JtZXJzLnVzZXIoYm90LCBwYXlsb2FkLnVzZXIpXG4gIGlmIChwcm9wcy5zb3J0VmFsdWUgJiYgcGF5bG9hZC5zb3J0X3ZhbHVlICE9PSB1bmRlZmluZWQpIHN0aWNrZXIuc29ydFZhbHVlID0gcGF5bG9hZC5zb3J0X3ZhbHVlXG5cbiAgcmV0dXJuIGJvdC50cmFuc2Zvcm1lcnMuY3VzdG9taXplcnMuc3RpY2tlcihib3QsIHBheWxvYWQsIHN0aWNrZXIpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1TdGlja2VyUGFjayhib3Q6IEludGVybmFsQm90LCBwYXlsb2FkOiBEaXNjb3JkU3RpY2tlclBhY2spOiBTdGlja2VyUGFjayB7XG4gIGNvbnN0IHBhY2sgPSB7XG4gICAgaWQ6IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKHBheWxvYWQuaWQpLFxuICAgIHN0aWNrZXJzOiBwYXlsb2FkLnN0aWNrZXJzLm1hcCgoc3RpY2tlcikgPT4gYm90LnRyYW5zZm9ybWVycy5zdGlja2VyKGJvdCwgc3RpY2tlcikpLFxuICAgIG5hbWU6IHBheWxvYWQubmFtZSxcbiAgICBza3VJZDogYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5za3VfaWQpLFxuICAgIGNvdmVyU3RpY2tlcklkOiBwYXlsb2FkLmNvdmVyX3N0aWNrZXJfaWQgPyBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLmNvdmVyX3N0aWNrZXJfaWQpIDogdW5kZWZpbmVkLFxuICAgIGRlc2NyaXB0aW9uOiBwYXlsb2FkLmRlc2NyaXB0aW9uLFxuICAgIGJhbm5lckFzc2V0SWQ6IHBheWxvYWQuYmFubmVyX2Fzc2V0X2lkID8gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5iYW5uZXJfYXNzZXRfaWQpIDogdW5kZWZpbmVkLFxuICB9IGFzIFN0aWNrZXJQYWNrXG5cbiAgcmV0dXJuIGJvdC50cmFuc2Zvcm1lcnMuY3VzdG9taXplcnMuc3RpY2tlclBhY2soYm90LCBwYXlsb2FkLCBwYWNrKVxufVxuIl0sIm5hbWVzIjpbInRyYW5zZm9ybVN0aWNrZXIiLCJib3QiLCJwYXlsb2FkIiwicHJvcHMiLCJ0cmFuc2Zvcm1lcnMiLCJkZXNpcmVkUHJvcGVydGllcyIsInN0aWNrZXIiLCJpZCIsInNub3dmbGFrZSIsInBhY2tJZCIsInBhY2tfaWQiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJ0YWdzIiwidHlwZSIsImZvcm1hdFR5cGUiLCJmb3JtYXRfdHlwZSIsImF2YWlsYWJsZSIsImd1aWxkSWQiLCJndWlsZF9pZCIsInVzZXIiLCJzb3J0VmFsdWUiLCJzb3J0X3ZhbHVlIiwidW5kZWZpbmVkIiwiY3VzdG9taXplcnMiLCJ0cmFuc2Zvcm1TdGlja2VyUGFjayIsInBhY2siLCJzdGlja2VycyIsIm1hcCIsInNrdUlkIiwic2t1X2lkIiwiY292ZXJTdGlja2VySWQiLCJjb3Zlcl9zdGlja2VyX2lkIiwiYmFubmVyQXNzZXRJZCIsImJhbm5lcl9hc3NldF9pZCIsInN0aWNrZXJQYWNrIl0sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLFNBQVNBLGlCQUFpQkMsR0FBZ0IsRUFBRUMsT0FBdUI7SUFDeEUsTUFBTUMsUUFBUUYsSUFBSUcsWUFBWSxDQUFDQyxpQkFBaUIsQ0FBQ0Ms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