export function transformAutoModerationActionExecution(bot, payload) {
    const rule = {
        content: payload.content,
        ruleTriggerType: payload.rule_trigger_type,
        guildId: bot.transformers.snowflake(payload.guild_id),
        ruleId: bot.transformers.snowflake(payload.rule_id),
        userId: bot.transformers.snowflake(payload.user_id),
        channelId: payload.channel_id ? bot.transformers.snowflake(payload.channel_id) : undefined,
        messageId: payload.message_id ? bot.transformers.snowflake(payload.message_id) : undefined,
        alertSystemMessageId: payload.alert_system_message_id ? bot.transformers.snowflake(payload.alert_system_message_id) : undefined,
        matchedKeyword: payload.matched_keyword ?? '',
        matchedContent: payload.matched_content ?? '',
        action: {
            type: payload.action.type,
            metadata: {
                durationSeconds: payload.action.metadata.duration_seconds,
                customMessage: payload.action.metadata.custom_message,
                channelId: payload.action.metadata.channel_id ? bot.transformers.snowflake(payload.action.metadata.channel_id) : undefined
            }
        }
    };
    return bot.transformers.customizers.automodActionExecution(bot, payload, rule);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90cmFuc2Zvcm1lcnMvYXV0b21vZEFjdGlvbkV4ZWN1dGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IERpc2NvcmRBdXRvTW9kZXJhdGlvbkFjdGlvbkV4ZWN1dGlvbiB9IGZyb20gJ0BkaXNjb3JkZW5vL3R5cGVzJ1xuaW1wb3J0IHR5cGUgeyBBdXRvTW9kZXJhdGlvbkFjdGlvbkV4ZWN1dGlvbiwgQm90IH0gZnJvbSAnLi4vaW5kZXguanMnXG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1BdXRvTW9kZXJhdGlvbkFjdGlvbkV4ZWN1dGlvbihib3Q6IEJvdCwgcGF5bG9hZDogRGlzY29yZEF1dG9Nb2RlcmF0aW9uQWN0aW9uRXhlY3V0aW9uKTogQXV0b01vZGVyYXRpb25BY3Rpb25FeGVjdXRpb24ge1xuICBjb25zdCBydWxlID0ge1xuICAgIGNvbnRlbnQ6IHBheWxvYWQuY29udGVudCxcbiAgICBydWxlVHJpZ2dlclR5cGU6IHBheWxvYWQucnVsZV90cmlnZ2VyX3R5cGUsXG4gICAgZ3VpbGRJZDogYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5ndWlsZF9pZCksXG4gICAgcnVsZUlkOiBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLnJ1bGVfaWQpLFxuICAgIHVzZXJJZDogYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC51c2VyX2lkKSxcbiAgICBjaGFubmVsSWQ6IHBheWxvYWQuY2hhbm5lbF9pZCA/IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKHBheWxvYWQuY2hhbm5lbF9pZCkgOiB1bmRlZmluZWQsXG4gICAgbWVzc2FnZUlkOiBwYXlsb2FkLm1lc3NhZ2VfaWQgPyBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLm1lc3NhZ2VfaWQpIDogdW5kZWZpbmVkLFxuICAgIGFsZXJ0U3lzdGVtTWVzc2FnZUlkOiBwYXlsb2FkLmFsZXJ0X3N5c3RlbV9tZXNzYWdlX2lkID8gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5hbGVydF9zeXN0ZW1fbWVzc2FnZV9pZCkgOiB1bmRlZmluZWQsXG4gICAgbWF0Y2hlZEtleXdvcmQ6IHBheWxvYWQubWF0Y2hlZF9rZXl3b3JkID8/ICcnLFxuICAgIG1hdGNoZWRDb250ZW50OiBwYXlsb2FkLm1hdGNoZWRfY29udGVudCA/PyAnJyxcbiAgICBhY3Rpb246IHtcbiAgICAgIHR5cGU6IHBheWxvYWQuYWN0aW9uLnR5cGUsXG4gICAgICBtZXRhZGF0YToge1xuICAgICAgICBkdXJhdGlvblNlY29uZHM6IHBheWxvYWQuYWN0aW9uLm1ldGFkYXRhLmR1cmF0aW9uX3NlY29uZHMsXG4gICAgICAgIGN1c3RvbU1lc3NhZ2U6IHBheWxvYWQuYWN0aW9uLm1ldGFkYXRhLmN1c3RvbV9tZXNzYWdlLFxuICAgICAgICBjaGFubmVsSWQ6IHBheWxvYWQuYWN0aW9uLm1ldGFkYXRhLmNoYW5uZWxfaWQgPyBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLmFjdGlvbi5tZXRhZGF0YS5jaGFubmVsX2lkKSA6IHVuZGVmaW5lZCxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSBhcyBBdXRvTW9kZXJhdGlvbkFjdGlvbkV4ZWN1dGlvblxuXG4gIHJldHVybiBib3QudHJhbnNmb3JtZXJzLmN1c3RvbWl6ZXJzLmF1dG9tb2RBY3Rpb25FeGVjdXRpb24oYm90LCBwYXlsb2FkLCBydWxlKVxufVxuIl0sIm5hbWVzIjpbInRyYW5zZm9ybUF1dG9Nb2RlcmF0aW9uQWN0aW9uRXhlY3V0aW9uIiwiYm90IiwicGF5bG9hZCIsInJ1bGUiLCJjb250ZW50IiwicnVsZVRyaWdnZXJUeXBlIiwicnVsZV90cmlnZ2VyX3R5cGUiLCJndWlsZElkIiwidHJhbnNmb3JtZXJzIiwic25vd2ZsYWtlIiwiZ3VpbGRfaWQiLCJydWxlSWQiLCJydWxlX2lkIiwidXNlcklkIiwidXNlcl9pZCIsImNoYW5uZWxJZCIsImNoYW5uZWxfaWQiLCJ1bmRlZmluZWQiLCJtZXNzYWdlSWQiLCJtZXNzYWdlX2lkIiwiYWxlcnRTeXN0ZW1NZXNzYWdlSWQiLCJhbGVydF9zeXN0ZW1fbWVzc2FnZV9pZCIsIm1hdGNoZWRLZXl3b3JkIiwibWF0Y2hlZF9rZXl3b3JkIiwibWF0Y2hlZENvbnRlbnQiLCJtYXRjaGVkX2NvbnRlbnQiLCJhY3Rpb24iLCJ0eXBlIiwibWV0YWRhdGEiLCJkdXJhdGlvblNlY29uZHMiLCJkdXJhdGlvbl9zZWNvbmRzIiwiY3VzdG9tTWVzc2FnZSIsImN1c3RvbV9tZXNzYWdlIiwiY3VzdG9taXplcnMiLCJhdXRvbW9kQWN0aW9uRXhlY3V0aW9uIl0sIm1hcHBpbmdzIjoiQUFHQSxPQUFPLFNBQVNBLHVDQUF1Q0MsR0FBUSxFQUFFQyxPQUE2QztJQUM1RyxNQUFNQyxPQUFPO1FBQ1hDLFNBQVNGLFFBQVFFLE9BQU87UUFDeEJDLGlCQUFpQkgsUUFBUUksaUJBQWlCO1FBQzFDQyxTQUFTTixJQUFJTyxZQUFZLENBQUNDLFNBQVMsQ0FBQ1AsUUFBUVEsUUFBUTtRQUNwREMsUUFBUVYsSUFBSU8sWUFBWSxDQUFDQyxTQUFTLENBQUNQLFFBQVFVLE9BQU87UUFDbERDLFFBQVFaLElBQUlPLFlBQVksQ0FBQ0MsU0FBUyxDQUFDUCxRQUFRWSxPQUFPO1FBQ2xEQyxXQUFXYixRQUFRYyxVQUFVLEdBQUdmLElBQUlPLFlBQVksQ0FBQ0MsU0FBUyxDQUFDUCxRQUFRYyxVQUFVLElBQUlDO1FBQ2pGQyxXQUFXaEIsUUFBUWlCLFVBQVUsR0FBR2xCLElBQUlPLFlBQVksQ0FBQ0MsU0FBUyxDQUFDUCxRQUFRaUIsVUFBVSxJQUFJRjtRQUNqRkcsc0JBQXNCbEIsUUFBUW1CLHVCQUF1QixHQUFHcEIsSUFBSU8sWUFBWSxDQUFDQyxTQUFTLENBQUNQLFFBQVFtQix1QkFBdUIsSUFBSUo7UUFDdEhLLGdCQUFnQnBCLFFBQVFxQixlQUFlLElBQUk7UUFDM0NDLGdCQUFnQnRCLFFBQVF1QixlQUFlLElBQUk7UUFDM0NDLFFBQVE7WUFDTkMsTUFBTXpCLFFBQVF3QixNQUFNLENBQUNDLElBQUk7WUFDekJDLFVBQVU7Z0JBQ1JDLGlCQUFpQjNCLFFBQVF3QixNQUFNLENBQUNFLFFBQVEsQ0FBQ0UsZ0JBQWdCO2dCQUN6REMsZUFBZTdCLFFBQVF3QixNQUFNLENBQUNFLFFBQVEsQ0FBQ0ksY0FBYztnQkFDckRqQixXQUFXYixRQUFRd0IsTUFBTSxDQUFDRSxRQUFRLENBQUNaLFVBQVUsR0FBR2YsSUFBSU8sWUFBWSxDQUFDQyxTQUFTLENBQUNQLFFBQVF3QixNQUFNLENBQUNFLFFBQVEsQ0FBQ1osVUFBVSxJQUFJQztZQUNuSDtRQUNGO0lBQ0Y7SUFFQSxPQUFPaEIsSUFBSU8sWUFBWSxDQUFDeUIsV0FBVyxDQUFDQyxzQkFBc0IsQ0FBQ2pDLEtBQUtDLFNBQVNDO0FBQzNFIn0=