export function createDesiredPropertiesObject(desiredProperties, defaultValue = false) {
    return {
        activityInstance: {
            applicationId: defaultValue,
            instanceId: defaultValue,
            launchId: defaultValue,
            location: defaultValue,
            users: defaultValue,
            ...desiredProperties.activityInstance
        },
        activityLocation: {
            channelId: defaultValue,
            guildId: defaultValue,
            id: defaultValue,
            kind: defaultValue,
            ...desiredProperties.activityLocation
        },
        attachment: {
            id: defaultValue,
            filename: defaultValue,
            title: defaultValue,
            contentType: defaultValue,
            size: defaultValue,
            url: defaultValue,
            proxyUrl: defaultValue,
            height: defaultValue,
            width: defaultValue,
            ephemeral: defaultValue,
            description: defaultValue,
            duration_secs: defaultValue,
            waveform: defaultValue,
            flags: defaultValue,
            ...desiredProperties.attachment
        },
        channel: {
            type: defaultValue,
            position: defaultValue,
            name: defaultValue,
            topic: defaultValue,
            bitrate: defaultValue,
            userLimit: defaultValue,
            rateLimitPerUser: defaultValue,
            rtcRegion: defaultValue,
            videoQualityMode: defaultValue,
            guildId: defaultValue,
            lastPinTimestamp: defaultValue,
            permissionOverwrites: defaultValue,
            id: defaultValue,
            permissions: defaultValue,
            lastMessageId: defaultValue,
            ownerId: defaultValue,
            applicationId: defaultValue,
            parentId: defaultValue,
            memberCount: defaultValue,
            messageCount: defaultValue,
            defaultAutoArchiveDuration: defaultValue,
            flags: defaultValue,
            appliedTags: defaultValue,
            availableTags: defaultValue,
            defaultForumLayout: defaultValue,
            defaultReactionEmoji: defaultValue,
            defaultSortOrder: defaultValue,
            defaultThreadRateLimitPerUser: defaultValue,
            icon: defaultValue,
            member: defaultValue,
            recipients: defaultValue,
            totalMessageSent: defaultValue,
            threadMetadata: defaultValue,
            ...desiredProperties.channel
        },
        forumTag: {
            emojiId: defaultValue,
            emojiName: defaultValue,
            id: defaultValue,
            moderated: defaultValue,
            name: defaultValue,
            ...desiredProperties.forumTag
        },
        emoji: {
            id: defaultValue,
            name: defaultValue,
            roles: defaultValue,
            user: defaultValue,
            ...desiredProperties.emoji
        },
        defaultReactionEmoji: {
            emojiId: defaultValue,
            emojiName: defaultValue,
            ...desiredProperties.defaultReactionEmoji
        },
        guild: {
            afkTimeout: defaultValue,
            approximateMemberCount: defaultValue,
            approximatePresenceCount: defaultValue,
            defaultMessageNotifications: defaultValue,
            description: defaultValue,
            explicitContentFilter: defaultValue,
            maxMembers: defaultValue,
            maxPresences: defaultValue,
            maxVideoChannelUsers: defaultValue,
            mfaLevel: defaultValue,
            name: defaultValue,
            channels: defaultValue,
            emojis: defaultValue,
            iconHash: defaultValue,
            large: defaultValue,
            members: defaultValue,
            owner: defaultValue,
            presences: defaultValue,
            roles: defaultValue,
            stickers: defaultValue,
            toggles: defaultValue,
            unavailable: defaultValue,
            voiceStates: defaultValue,
            widgetEnabled: defaultValue,
            nsfwLevel: defaultValue,
            preferredLocale: defaultValue,
            premiumSubscriptionCount: defaultValue,
            premiumTier: defaultValue,
            stageInstances: defaultValue,
            systemChannelFlags: defaultValue,
            vanityUrlCode: defaultValue,
            verificationLevel: defaultValue,
            welcomeScreen: defaultValue,
            discoverySplash: defaultValue,
            joinedAt: defaultValue,
            memberCount: defaultValue,
            shardId: defaultValue,
            icon: defaultValue,
            banner: defaultValue,
            splash: defaultValue,
            id: defaultValue,
            ownerId: defaultValue,
            permissions: defaultValue,
            afkChannelId: defaultValue,
            widgetChannelId: defaultValue,
            applicationId: defaultValue,
            systemChannelId: defaultValue,
            rulesChannelId: defaultValue,
            publicUpdatesChannelId: defaultValue,
            premiumProgressBarEnabled: defaultValue,
            safetyAlertsChannelId: defaultValue,
            maxStageVideoChannelUsers: defaultValue,
            ...desiredProperties.guild
        },
        interaction: {
            id: defaultValue,
            applicationId: defaultValue,
            type: defaultValue,
            guild: defaultValue,
            guildId: defaultValue,
            channel: defaultValue,
            channelId: defaultValue,
            member: defaultValue,
            user: defaultValue,
            token: defaultValue,
            version: defaultValue,
            message: defaultValue,
            data: defaultValue,
            locale: defaultValue,
            guildLocale: defaultValue,
            appPermissions: defaultValue,
            authorizingIntegrationOwners: defaultValue,
            context: defaultValue,
            ...desiredProperties.interaction
        },
        interactionCallback: {
            type: defaultValue,
            id: defaultValue,
            activityInstanceId: defaultValue,
            responseMessageEphemeral: defaultValue,
            responseMessageId: defaultValue,
            responseMessageLoading: defaultValue,
            ...desiredProperties.interactionCallback
        },
        interactionCallbackResponse: {
            interaction: defaultValue,
            resource: defaultValue,
            ...desiredProperties.interactionCallbackResponse
        },
        interactionResource: {
            type: defaultValue,
            activityInstance: defaultValue,
            message: defaultValue,
            ...desiredProperties.interactionResource
        },
        invite: {
            type: defaultValue,
            channelId: defaultValue,
            code: defaultValue,
            createdAt: defaultValue,
            guildId: defaultValue,
            inviter: defaultValue,
            maxAge: defaultValue,
            maxUses: defaultValue,
            targetType: defaultValue,
            targetUser: defaultValue,
            targetApplication: defaultValue,
            temporary: defaultValue,
            uses: defaultValue,
            approximateMemberCount: defaultValue,
            approximatePresenceCount: defaultValue,
            guildScheduledEvent: defaultValue,
            stageInstance: defaultValue,
            expiresAt: defaultValue,
            ...desiredProperties.invite
        },
        member: {
            id: defaultValue,
            guildId: defaultValue,
            user: defaultValue,
            nick: defaultValue,
            roles: defaultValue,
            joinedAt: defaultValue,
            premiumSince: defaultValue,
            avatar: defaultValue,
            banner: defaultValue,
            permissions: defaultValue,
            communicationDisabledUntil: defaultValue,
            toggles: defaultValue,
            avatarDecorationData: defaultValue,
            ...desiredProperties.member
        },
        message: {
            activity: defaultValue,
            application: defaultValue,
            applicationId: defaultValue,
            attachments: defaultValue,
            author: defaultValue,
            channelId: defaultValue,
            components: defaultValue,
            content: defaultValue,
            editedTimestamp: defaultValue,
            embeds: defaultValue,
            guildId: defaultValue,
            id: defaultValue,
            interactionMetadata: defaultValue,
            interaction: defaultValue,
            member: defaultValue,
            mentionedChannelIds: defaultValue,
            mentionedRoleIds: defaultValue,
            mentions: defaultValue,
            messageReference: defaultValue,
            messageSnapshots: defaultValue,
            referencedMessage: defaultValue,
            nonce: defaultValue,
            reactions: defaultValue,
            stickerItems: defaultValue,
            thread: defaultValue,
            type: defaultValue,
            webhookId: defaultValue,
            poll: defaultValue,
            call: defaultValue,
            ...desiredProperties.message
        },
        messageSnapshot: {
            message: defaultValue,
            ...desiredProperties.messageSnapshot
        },
        messageInteractionMetadata: {
            id: defaultValue,
            type: defaultValue,
            user: defaultValue,
            authorizingIntegrationOwners: defaultValue,
            originalResponseMessageId: defaultValue,
            interactedMessageId: defaultValue,
            triggeringInteractionMetadata: defaultValue,
            targetMessageId: defaultValue,
            targetUser: defaultValue,
            ...desiredProperties.messageInteractionMetadata
        },
        messageInteraction: {
            id: defaultValue,
            member: defaultValue,
            name: defaultValue,
            type: defaultValue,
            user: defaultValue,
            ...desiredProperties.messageInteraction
        },
        messageReference: {
            messageId: defaultValue,
            channelId: defaultValue,
            guildId: defaultValue,
            ...desiredProperties.messageReference
        },
        messageCall: {
            participants: defaultValue,
            endedTimestamp: defaultValue,
            ...desiredProperties.messageCall
        },
        role: {
            name: defaultValue,
            guildId: defaultValue,
            position: defaultValue,
            color: defaultValue,
            id: defaultValue,
            permissions: defaultValue,
            icon: defaultValue,
            unicodeEmoji: defaultValue,
            flags: defaultValue,
            tags: defaultValue,
            toggles: defaultValue,
            ...desiredProperties.role
        },
        scheduledEvent: {
            id: defaultValue,
            guildId: defaultValue,
            channelId: defaultValue,
            creatorId: defaultValue,
            scheduledStartTime: defaultValue,
            scheduledEndTime: defaultValue,
            entityId: defaultValue,
            creator: defaultValue,
            name: defaultValue,
            description: defaultValue,
            privacyLevel: defaultValue,
            status: defaultValue,
            entityType: defaultValue,
            userCount: defaultValue,
            location: defaultValue,
            image: defaultValue,
            recurrenceRule: defaultValue,
            ...desiredProperties.scheduledEvent
        },
        scheduledEventRecurrenceRule: {
            start: defaultValue,
            end: defaultValue,
            frequency: defaultValue,
            interval: defaultValue,
            byWeekday: defaultValue,
            byNWeekday: defaultValue,
            byMonth: defaultValue,
            byMonthDay: defaultValue,
            byYearDay: defaultValue,
            count: defaultValue,
            ...desiredProperties.scheduledEventRecurrenceRule
        },
        stageInstance: {
            id: defaultValue,
            guildId: defaultValue,
            channelId: defaultValue,
            topic: defaultValue,
            guildScheduledEventId: defaultValue,
            ...desiredProperties.stageInstance
        },
        inviteStageInstance: {
            members: defaultValue,
            participantCount: defaultValue,
            speakerCount: defaultValue,
            topic: defaultValue,
            ...desiredProperties.inviteStageInstance
        },
        sticker: {
            id: defaultValue,
            packId: defaultValue,
            name: defaultValue,
            description: defaultValue,
            tags: defaultValue,
            type: defaultValue,
            formatType: defaultValue,
            available: defaultValue,
            guildId: defaultValue,
            user: defaultValue,
            sortValue: defaultValue,
            ...desiredProperties.sticker
        },
        user: {
            username: defaultValue,
            globalName: defaultValue,
            locale: defaultValue,
            flags: defaultValue,
            premiumType: defaultValue,
            publicFlags: defaultValue,
            accentColor: defaultValue,
            id: defaultValue,
            discriminator: defaultValue,
            avatar: defaultValue,
            email: defaultValue,
            banner: defaultValue,
            avatarDecorationData: defaultValue,
            toggles: defaultValue,
            ...desiredProperties.user
        },
        avatarDecorationData: {
            asset: defaultValue,
            skuId: defaultValue,
            ...desiredProperties.avatarDecorationData
        },
        webhook: {
            id: defaultValue,
            type: defaultValue,
            guildId: defaultValue,
            channelId: defaultValue,
            user: defaultValue,
            name: defaultValue,
            avatar: defaultValue,
            token: defaultValue,
            applicationId: defaultValue,
            sourceGuild: defaultValue,
            sourceChannel: defaultValue,
            url: defaultValue,
            ...desiredProperties.webhook
        },
        guildOnboarding: {
            defaultChannelIds: defaultValue,
            enabled: defaultValue,
            guildId: defaultValue,
            mode: defaultValue,
            prompts: defaultValue,
            ...desiredProperties.guildOnboarding
        },
        guildOnboardingPrompt: {
            id: defaultValue,
            inOnboarding: defaultValue,
            options: defaultValue,
            required: defaultValue,
            singleSelect: defaultValue,
            title: defaultValue,
            type: defaultValue,
            ...desiredProperties.guildOnboardingPrompt
        },
        guildOnboardingPromptOption: {
            channelIds: defaultValue,
            description: defaultValue,
            emoji: defaultValue,
            id: defaultValue,
            roleIds: defaultValue,
            title: defaultValue,
            ...desiredProperties.guildOnboardingPromptOption
        },
        entitlement: {
            id: defaultValue,
            skuId: defaultValue,
            userId: defaultValue,
            guildId: defaultValue,
            applicationId: defaultValue,
            type: defaultValue,
            deleted: defaultValue,
            startsAt: defaultValue,
            endsAt: defaultValue,
            consumed: defaultValue,
            ...desiredProperties.entitlement
        },
        sku: {
            id: defaultValue,
            type: defaultValue,
            applicationId: defaultValue,
            name: defaultValue,
            slug: defaultValue,
            flags: defaultValue,
            ...desiredProperties.sku
        },
        voiceState: {
            requestToSpeakTimestamp: defaultValue,
            channelId: defaultValue,
            guildId: defaultValue,
            toggles: defaultValue,
            sessionId: defaultValue,
            userId: defaultValue,
            ...desiredProperties.voiceState
        },
        poll: {
            question: defaultValue,
            answers: defaultValue,
            expiry: defaultValue,
            layoutType: defaultValue,
            allowMultiselect: defaultValue,
            results: defaultValue,
            ...desiredProperties.poll
        },
        pollAnswer: {
            answerId: defaultValue,
            pollMedia: defaultValue,
            ...desiredProperties.pollAnswer
        },
        pollResult: {
            isFinalized: defaultValue,
            answerCounts: defaultValue,
            ...desiredProperties.pollResult
        },
        pollAnswerCount: {
            id: defaultValue,
            count: defaultValue,
            meVoted: defaultValue,
            ...desiredProperties.pollAnswerCount
        },
        pollMedia: {
            text: defaultValue,
            emoji: defaultValue,
            ...desiredProperties.pollMedia
        },
        subscription: {
            canceledAt: defaultValue,
            country: defaultValue,
            currentPeriodEnd: defaultValue,
            currentPeriodStart: defaultValue,
            renewalSkuIds: defaultValue,
            entitlementIds: defaultValue,
            id: defaultValue,
            skuIds: defaultValue,
            status: defaultValue,
            userId: defaultValue,
            ...desiredProperties.subscription
        },
        soundboardSound: {
            available: defaultValue,
            emojiId: defaultValue,
            emojiName: defaultValue,
            guildId: defaultValue,
            name: defaultValue,
            soundId: defaultValue,
            user: defaultValue,
            volume: defaultValue,
            ...desiredProperties.soundboardSound
        }
    };
}
/** The behavior it should be used when resolving an undesired property */ export var DesiredPropertiesBehavior = /*#__PURE__*/ function(DesiredPropertiesBehavior) {
    /** When this behavior is used the key will be missing completely */ DesiredPropertiesBehavior[DesiredPropertiesBehavior["RemoveKey"] = 0] = "RemoveKey";
    /** When this behavior is used the key will be a string explaining why the property is disabled */ DesiredPropertiesBehavior[DesiredPropertiesBehavior["ChangeType"] = 1] = "ChangeType";
    return DesiredPropertiesBehavior;
}({});

//# sourceMappingURL=data:application/json;base64,