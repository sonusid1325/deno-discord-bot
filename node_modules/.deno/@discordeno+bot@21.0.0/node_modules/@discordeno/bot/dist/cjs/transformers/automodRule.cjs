"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "transformAutoModerationRule", {
    enumerable: true,
    get: function() {
        return transformAutoModerationRule;
    }
});
function transformAutoModerationRule(bot, payload) {
    const rule = {
        name: payload.name,
        eventType: payload.event_type,
        triggerType: payload.trigger_type,
        enabled: payload.enabled,
        id: bot.transformers.snowflake(payload.id),
        guildId: bot.transformers.snowflake(payload.guild_id),
        creatorId: bot.transformers.snowflake(payload.creator_id),
        exemptRoles: payload.exempt_roles.map((id)=>bot.transformers.snowflake(id)),
        exemptChannels: payload.exempt_channels.map((id)=>bot.transformers.snowflake(id)),
        triggerMetadata: payload.trigger_metadata ? {
            keywordFilter: payload.trigger_metadata.keyword_filter,
            regexPatterns: payload.trigger_metadata.regex_patterns,
            presets: payload.trigger_metadata.presets,
            allowList: payload.trigger_metadata.allow_list,
            mentionTotalLimit: payload.trigger_metadata.mention_total_limit
        } : undefined,
        actions: payload.actions.map((action)=>({
                type: action.type,
                metadata: action.metadata ? {
                    channelId: action.metadata.channel_id ? bot.transformers.snowflake(action.metadata.channel_id) : undefined,
                    customMessage: action.metadata.custom_message,
                    durationSeconds: action.metadata.duration_seconds
                } : undefined
            }))
    };
    return bot.transformers.customizers.automodRule(bot, payload, rule);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90cmFuc2Zvcm1lcnMvYXV0b21vZFJ1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBEaXNjb3JkQXV0b01vZGVyYXRpb25SdWxlIH0gZnJvbSAnQGRpc2NvcmRlbm8vdHlwZXMnXG5pbXBvcnQgdHlwZSB7IEF1dG9Nb2RlcmF0aW9uUnVsZSwgQm90IH0gZnJvbSAnLi4vaW5kZXguanMnXG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1BdXRvTW9kZXJhdGlvblJ1bGUoYm90OiBCb3QsIHBheWxvYWQ6IERpc2NvcmRBdXRvTW9kZXJhdGlvblJ1bGUpOiBBdXRvTW9kZXJhdGlvblJ1bGUge1xuICBjb25zdCBydWxlID0ge1xuICAgIG5hbWU6IHBheWxvYWQubmFtZSxcbiAgICBldmVudFR5cGU6IHBheWxvYWQuZXZlbnRfdHlwZSxcbiAgICB0cmlnZ2VyVHlwZTogcGF5bG9hZC50cmlnZ2VyX3R5cGUsXG4gICAgZW5hYmxlZDogcGF5bG9hZC5lbmFibGVkLFxuICAgIGlkOiBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLmlkKSxcbiAgICBndWlsZElkOiBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLmd1aWxkX2lkKSxcbiAgICBjcmVhdG9ySWQ6IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKHBheWxvYWQuY3JlYXRvcl9pZCksXG4gICAgZXhlbXB0Um9sZXM6IHBheWxvYWQuZXhlbXB0X3JvbGVzLm1hcCgoaWQpID0+IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKGlkKSksXG4gICAgZXhlbXB0Q2hhbm5lbHM6IHBheWxvYWQuZXhlbXB0X2NoYW5uZWxzLm1hcCgoaWQpID0+IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKGlkKSksXG4gICAgdHJpZ2dlck1ldGFkYXRhOiBwYXlsb2FkLnRyaWdnZXJfbWV0YWRhdGFcbiAgICAgID8ge1xuICAgICAgICAgIGtleXdvcmRGaWx0ZXI6IHBheWxvYWQudHJpZ2dlcl9tZXRhZGF0YS5rZXl3b3JkX2ZpbHRlcixcbiAgICAgICAgICByZWdleFBhdHRlcm5zOiBwYXlsb2FkLnRyaWdnZXJfbWV0YWRhdGEucmVnZXhfcGF0dGVybnMsXG4gICAgICAgICAgcHJlc2V0czogcGF5bG9hZC50cmlnZ2VyX21ldGFkYXRhLnByZXNldHMsXG4gICAgICAgICAgYWxsb3dMaXN0OiBwYXlsb2FkLnRyaWdnZXJfbWV0YWRhdGEuYWxsb3dfbGlzdCxcbiAgICAgICAgICBtZW50aW9uVG90YWxMaW1pdDogcGF5bG9hZC50cmlnZ2VyX21ldGFkYXRhLm1lbnRpb25fdG90YWxfbGltaXQsXG4gICAgICAgIH1cbiAgICAgIDogdW5kZWZpbmVkLFxuICAgIGFjdGlvbnM6IHBheWxvYWQuYWN0aW9ucy5tYXAoKGFjdGlvbikgPT4gKHtcbiAgICAgIHR5cGU6IGFjdGlvbi50eXBlLFxuICAgICAgbWV0YWRhdGE6IGFjdGlvbi5tZXRhZGF0YVxuICAgICAgICA/IHtcbiAgICAgICAgICAgIGNoYW5uZWxJZDogYWN0aW9uLm1ldGFkYXRhLmNoYW5uZWxfaWQgPyBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShhY3Rpb24ubWV0YWRhdGEuY2hhbm5lbF9pZCkgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBjdXN0b21NZXNzYWdlOiBhY3Rpb24ubWV0YWRhdGEuY3VzdG9tX21lc3NhZ2UsXG4gICAgICAgICAgICBkdXJhdGlvblNlY29uZHM6IGFjdGlvbi5tZXRhZGF0YS5kdXJhdGlvbl9zZWNvbmRzLFxuICAgICAgICAgIH1cbiAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgfSkpLFxuICB9IGFzIEF1dG9Nb2RlcmF0aW9uUnVsZVxuXG4gIHJldHVybiBib3QudHJhbnNmb3JtZXJzLmN1c3RvbWl6ZXJzLmF1dG9tb2RSdWxlKGJvdCwgcGF5bG9hZCwgcnVsZSlcbn1cbiJdLCJuYW1lcyI6WyJ0cmFuc2Zvcm1BdXRvTW9kZXJhdGlvblJ1bGUiLCJib3QiLCJwYXlsb2FkIiwicnVsZSIsIm5hbWUiLCJldmVudFR5cGUiLCJldmVudF90eXBlIiwidHJpZ2dlclR5cGUiLCJ0cmlnZ2VyX3R5cGUiLCJlbmFibGVkIiwiaWQiLCJ0cmFuc2Zvcm1lcnMiLCJzbm93Zmxha2UiLCJndWlsZElkIiwiZ3VpbGRfaWQiLCJjcmVhdG9ySWQiLCJjcmVhdG9yX2lkIiwiZXhlbXB0Um9sZXMiLCJleGVtcHRfcm9sZXMiLCJtYXAiLCJleGVtcHRDaGFubmVscyIsImV4ZW1wdF9jaGFubmVscyIsInRyaWdnZXJNZXRhZGF0YSIsInRyaWdnZXJfbWV0YWRhdGEiLCJrZXl3b3JkRmlsdGVyIiwia2V5d29yZF9maWx0ZXIiLCJyZWdleFBhdHRlcm5zIiwicmVnZXhfcGF0dGVybnMiLCJwcmVzZXRzIiwiYWxsb3dMaXN0IiwiYWxsb3dfbGlzdCIsIm1lbnRpb25Ub3RhbExpbWl0IiwibWVudGlvbl90b3RhbF9saW1pdCIsInVuZGVmaW5lZCIsImFjdGlvbnMiLCJhY3Rpb24iLCJ0eXBlIiwibWV0YWRhdGEiLCJjaGFubmVsSWQiLCJjaGFubmVsX2lkIiwiY3VzdG9tTWVzc2FnZSIsImN1c3RvbV9tZXNzYWdlIiwiZHVyYXRpb25TZWNvbmRzIiwiZHVyYXRpb25fc2Vjb25kcyIsImN1c3RvbWl6ZXJzIiwiYXV0b21vZFJ1bGUiXSwibWFwcGluZ3MiOiI7Ozs7K0JBR2dCQTs7O2VBQUFBOzs7QUFBVCxTQUFTQSw0QkFBNEJDLEdBQVEsRUFBRUMsT0FBa0M7SUFDdEYsTUFBTUMsT0FBTztRQUNYQyxNQUFNRixRQUFRRSxJQUFJO1FBQ2xCQyxXQUFXSCxRQUFRSSxVQUFVO1FBQzdCQyxhQUFhTCxRQUFRTSxZQUFZO1FBQ2pDQyxTQUFTUCxRQUFRTyxPQUFPO1FBQ3hCQyxJQUFJVCxJQUFJVSxZQUFZLENBQUNDLFNBQVMsQ0FBQ1YsUUFBUVEsRUFBRTtRQUN6Q0csU0FBU1osSUFBSVUsWUFBWSxDQUFDQyxTQUFTLENBQUNWLFFBQVFZLFFBQVE7UUFDcERDLFdBQVdkLElBQUlVLFlBQVksQ0FBQ0MsU0FBUyxDQUFDVixRQUFRYyxVQUFVO1FBQ3hEQyxhQUFhZixRQUFRZ0IsWUFBWSxDQUFDQyxHQUFHLENBQUMsQ0FBQ1QsS0FBT1QsSUFBSVUsWUFBWSxDQUFDQyxTQUFTLENBQUNGO1FBQ3pFVSxnQkFBZ0JsQixRQUFRbUIsZUFBZSxDQUFDRixHQUFHLENBQUMsQ0FBQ1QsS0FBT1QsSUFBSVUsWUFBWSxDQUFDQyxTQUFTLENBQUNGO1FBQy9FWSxpQkFBaUJwQixRQUFRcUIsZ0JBQWdCLEdBQ3JDO1lBQ0VDLGVBQWV0QixRQUFRcUIsZ0JBQWdCLENBQUNFLGNBQWM7WUFDdERDLGVBQWV4QixRQUFRcUIsZ0JBQWdCLENBQUNJLGNBQWM7WUFDdERDLFNBQVMxQixRQUFRcUIsZ0JBQWdCLENBQUNLLE9BQU87WUFDekNDLFdBQVczQixRQUFRcUIsZ0JBQWdCLENBQUNPLFVBQVU7WUFDOUNDLG1CQUFtQjdCLFFBQVFxQixnQkFBZ0IsQ0FBQ1MsbUJBQW1CO1FBQ2pFLElBQ0FDO1FBQ0pDLFNBQVNoQyxRQUFRZ0MsT0FBTyxDQUFDZixHQUFHLENBQUMsQ0FBQ2dCLFNBQVksQ0FBQTtnQkFDeENDLE1BQU1ELE9BQU9DLElBQUk7Z0JBQ2pCQyxVQUFVRixPQUFPRSxRQUFRLEdBQ3JCO29CQUNFQyxXQUFXSCxPQUFPRSxRQUFRLENBQUNFLFVBQVUsR0FBR3RDLElBQUlVLFlBQVksQ0FBQ0MsU0FBUyxDQUFDdUIsT0FBT0UsUUFBUSxDQUFDRSxVQUFVLElBQUlOO29CQUNqR08sZUFBZUwsT0FBT0UsUUFBUSxDQUFDSSxjQUFjO29CQUM3Q0MsaUJBQWlCUCxPQUFPRSxRQUFRLENBQUNNLGdCQUFnQjtnQkFDbkQsSUFDQVY7WUFDTixDQUFBO0lBQ0Y7SUFFQSxPQUFPaEMsSUFBSVUsWUFBWSxDQUFDaUMsV0FBVyxDQUFDQyxXQUFXLENBQUM1QyxLQUFLQyxTQUFTQztBQUNoRSJ9