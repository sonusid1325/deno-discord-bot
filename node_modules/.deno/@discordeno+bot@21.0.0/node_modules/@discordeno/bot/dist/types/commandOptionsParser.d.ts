import type { Attachment, Channel, DesiredPropertiesBehavior, Interaction, InteractionDataOption, Member, Role, SetupDesiredProps, TransformProperty, TransformersDesiredProperties, User } from './index.js';
export declare function commandOptionsParser<TProps extends TransformersDesiredProperties & {
    interaction: {
        data: true;
    };
}, TBehavior extends DesiredPropertiesBehavior>(__interaction: SetupDesiredProps<Interaction, TProps, TBehavior>, options?: InteractionDataOption[]): ParsedInteractionOption<TProps, TBehavior>;
export interface ParsedInteractionOption<TProps extends TransformersDesiredProperties, TBehavior extends DesiredPropertiesBehavior> {
    [key: string]: InteractionResolvedData<TProps, TBehavior>;
}
export type InteractionResolvedData<TProps extends TransformersDesiredProperties, TBehavior extends DesiredPropertiesBehavior> = string | number | boolean | TransformProperty<InteractionResolvedUser, TProps, TBehavior> | TransformProperty<InteractionResolvedChannel, TProps, TBehavior> | TransformProperty<Role, TProps, TBehavior> | TransformProperty<Attachment, TProps, TBehavior> | ParsedInteractionOption<TProps, TBehavior>;
export interface InteractionResolvedUser {
    user: User;
    member: InteractionResolvedMember;
}
export type InteractionResolvedChannel = Pick<Channel, 'id' | 'name' | 'type' | 'permissions' | 'threadMetadata' | 'parentId'>;
export type InteractionResolvedMember = Omit<Member, 'user' | 'deaf' | 'mute'>;
//# sourceMappingURL=commandOptionsParser.d.ts.map